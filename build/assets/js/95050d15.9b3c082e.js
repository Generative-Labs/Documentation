"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[3737],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},o=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,g=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(g,l(l({ref:t},o),{},{components:n})):r.createElement(g,l({ref:t},o))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,l[1]=c;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3802:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],c={position:9},s="Structs",u={unversionedId:"Web3MQ-SDK/Swift-SDK/Structs/Structs",id:"Web3MQ-SDK/Swift-SDK/Structs/Structs",title:"Structs",description:"EthAccount",source:"@site/docs/Web3MQ-SDK/Swift-SDK/Structs/Structs.md",sourceDirName:"Web3MQ-SDK/Swift-SDK/Structs",slug:"/Web3MQ-SDK/Swift-SDK/Structs/",permalink:"/docs/Web3MQ-SDK/Swift-SDK/Structs/",tags:[],version:"current",frontMatter:{position:9},sidebar:"tutorialSidebar",previous:{title:"Topics",permalink:"/docs/Web3MQ-SDK/Swift-SDK/Topics/"},next:{title:"Overview",permalink:"/docs/Web3MQ-API/Intro"}},o={},p=[{value:"EthAccount",id:"ethaccount",level:3},{value:"KeyPair",id:"keypair",level:3},{value:"MessageStatus",id:"messagestatus",level:3},{value:"NotificationStatus",id:"notificationstatus",level:3},{value:"Topic",id:"topic",level:3},{value:"Notificaion",id:"notificaion",level:3},{value:"UserProfile",id:"userprofile",level:3},{value:"UserInfo",id:"userinfo",level:3},{value:"MessageStatus",id:"messagestatus-1",level:3},{value:"Message",id:"message",level:3}],d={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"structs"},"Structs"),(0,a.kt)("h3",{id:"ethaccount"},"EthAccount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public struct EthAccount {\n    public let address: String?\n    public let balance: Double?\n    public let shortAddress:String?\n}\n")),(0,a.kt)("h3",{id:"keypair"},"KeyPair"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public struct KeyPair {\n    public let privateKey: String\n    public let publicKey: String\n}\n")),(0,a.kt)("h3",{id:"messagestatus"},"MessageStatus"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public enum MessageStatus: String {\n        case delivered\n        case read \n}\n")),(0,a.kt)("h3",{id:"notificationstatus"},"NotificationStatus"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public enum NotificationStatus: String {\n        case delivered\n        case read\n}\n")),(0,a.kt)("h3",{id:"topic"},"Topic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public struct Topic {\n            public let topicId: String\n            public let topicName: String?\n}\n")),(0,a.kt)("h3",{id:"notificaion"},"Notificaion"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public struct Notificaion {\n            public let title: String\n            public let content: String\n            public let type: Int\n            public let version: Int \n            public let timestamp: Int \n}\n")),(0,a.kt)("h3",{id:"userprofile"},"UserProfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public struct UserProfile {\n    public let userId: String\n    public let walletAddress: String?\n    public let walletType: String?\n    public let nickname: String?\n    public let avatarUrl: String?\n}\n")),(0,a.kt)("h3",{id:"userinfo"},"UserInfo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public struct UserInfo: Codable {\n    let didType: String\n    let didValue: String\n    let userId: String\n    \n    let publicKey: String?\n    let publicKeyType: String?\n    let walletAddress: String?\n    let walletType: String?\n    let signatureContent: String?\n    let timestamp: Int?\n    let didSignature: String?\n}\n")),(0,a.kt)("h3",{id:"messagestatus-1"},"MessageStatus"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"public enum MessageStatus: String, Codable {\n    case delivered\n    case read\n}\n")),(0,a.kt)("h3",{id:"message"},"Message"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},'public struct Message: Codable {\n\n    public struct Status: Codable {\n        public let status: MessageStatus?\n        public let timestamp: Int?\n    }\n\n    public var cipherSuite: String = "NONE"\n    public let from: String\n    public let topic: String\n    public let messageId: String\n    public let timestamp: Int\n\n    /// base64\n    public let payload: String\n\n    public let messageStatus: Status?\n\n}\n')))}f.isMDXComponent=!0}}]);