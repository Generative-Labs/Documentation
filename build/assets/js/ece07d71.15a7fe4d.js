"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[702],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i=r.createContext({}),s=function(t){var e=r.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},p=function(t){var e=s(t.components);return r.createElement(i.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(k,c(c({ref:e},p),{},{components:n})):r.createElement(k,c({ref:e},p))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,c=new Array(o);c[0]=d;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l.mdxType="string"==typeof t?t:a,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9993:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],l={position:5},i="Contact",s={unversionedId:"Web3MQ-SDK/JS-SDK/contact/contact",id:"Web3MQ-SDK/JS-SDK/contact/contact",title:"Contact",description:"Properties",source:"@site/docs/Web3MQ-SDK/JS-SDK/contact/contact.md",sourceDirName:"Web3MQ-SDK/JS-SDK/contact",slug:"/Web3MQ-SDK/JS-SDK/contact/",permalink:"/docs/Web3MQ-SDK/JS-SDK/contact/",tags:[],version:"current",frontMatter:{position:5},sidebar:"tutorialSidebar",previous:{title:"Messages",permalink:"/docs/Web3MQ-SDK/JS-SDK/message/"},next:{title:"User",permalink:"/docs/Web3MQ-SDK/JS-SDK/user/"}},p={},u=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Properties",id:"properties-1",level:2},{value:"contactList",id:"contactlist",level:3},{value:"get",id:"get",level:4},{value:"Returns",id:"returns",level:4},{value:"activeContact",id:"activecontact",level:3},{value:"get",id:"get-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Methods",id:"methods-1",level:2},{value:"setActiveContact()",id:"setactivecontact",level:3},{value:"queryContacts()",id:"querycontacts",level:3}],d={toc:u};function m(t){var e=t.components,n=(0,a.Z)(t,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contact"},"Contact"),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"name"),(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"contactList"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#userinfo"},"UserInfo"),"[] ","|"," null"),(0,o.kt)("td",{parentName:"tr",align:null},"channel list")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"activeContact"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#userinfo"},"ChannelResponse")," ","|"," null"),(0,o.kt)("td",{parentName:"tr",align:null},"current active channel")))),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"name"),(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"Parameters Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"setActiveContact"),(0,o.kt)("td",{parentName:"tr",align:null},"function"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#userinfo"},"UserInfo"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"queryContacts"),(0,o.kt)("td",{parentName:"tr",align:null},"function"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#pageparams"},"pageParams"))))),(0,o.kt)("h2",{id:"properties-1"},"Properties"),(0,o.kt)("h3",{id:"contactlist"},"contactList"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Contact List")),(0,o.kt)("h4",{id:"get"},"get"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.contact.contactList;\n')),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Array"),": ",(0,o.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/types/#userinfo"},"UserInfo"),"[]")),(0,o.kt)("h3",{id:"activecontact"},"activeContact"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Currently selected contact")),(0,o.kt)("h4",{id:"get-1"},"get"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.contact.activeContact;\n')),(0,o.kt)("h4",{id:"returns-1"},"Returns"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Object"),": ",(0,o.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/types/#userinfo"},"UserInfo"))),(0,o.kt)("h2",{id:"methods-1"},"Methods"),(0,o.kt)("h3",{id:"setactivecontact"},"setActiveContact()"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Sets the currently active Contace and notifies subscribers of updates")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"* setActiveContact: (contact: UserInfo) => Promise<void>;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.contact.setActiveContact(user: UserInfo);\n\n// After the request is completed, the data will be synchronized to the client\nconsole.log(client.contact.activeContact);\n')),(0,o.kt)("h3",{id:"querycontacts"},"queryContacts()"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Get contact list and notifies subscribers of updates")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"* queryContacts(option?: PageParams): Promise<void>;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.contact.queryContacts({\n  page: 1,\n  size: 20,\n});\n\n// After the request is completed, the data will be synchronized to the client\nconsole.log(client.contact.contactList);\n')))}m.isMDXComponent=!0}}]);