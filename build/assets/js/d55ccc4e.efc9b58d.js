"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[7490],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(t),f=o,b=m["".concat(l,".").concat(f)]||m[f]||u[f]||a;return t?r.createElement(b,i(i({ref:n},s),{},{components:t})):r.createElement(b,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3233:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={sidebar_position:0},l="Intro",p={unversionedId:"Web3MQ-UI-Components/Intro",id:"Web3MQ-UI-Components/Intro",title:"Intro",description:"Web3MQ React Component Libraries",source:"@site/docs/Web3MQ-UI-Components/Intro.md",sourceDirName:"Web3MQ-UI-Components",slug:"/Web3MQ-UI-Components/Intro",permalink:"/docs/Web3MQ-UI-Components/Intro",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Send Notifications",permalink:"/docs/Web3MQ-RESTFul-API/Notification/send-notifications"},next:{title:"Chat",permalink:"/docs/Web3MQ-UI-Components/coreComponent/Chat"}},s={},u=[{value:"Install with NPM",id:"install-with-npm",level:3},{value:"Install with Yarn",id:"install-with-yarn",level:3},{value:"Creating a Web3MQ Client",id:"creating-a-web3mq-client",level:2},{value:"Your First App with Web3MQ React",id:"your-first-app-with-web3mq-react",level:2}],m={toc:u};function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"intro"},"Intro"),(0,a.kt)("p",null,"Web3MQ React Component Libraries"),(0,a.kt)("h3",{id:"install-with-npm"},"Install with NPM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install web3-mq-react\n")),(0,a.kt)("h3",{id:"install-with-yarn"},"Install with Yarn"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add web3-mq-react\n")),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("h2",{id:"creating-a-web3mq-client"},"Creating a Web3MQ Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Web3MQ } from 'web3-mq';\n\nconst client = Web3MQ.getInstance('YOUR_ACCESS_TOKEN');\n")),(0,a.kt)("h2",{id:"your-first-app-with-web3mq-react"},"Your First App with Web3MQ React"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Chat, Channel, DashBoard, Main, AppTypeEnum } from 'web3-mq-react';\nimport { Web3MQ } from 'web3-mq';\nimport 'web3-mq-react/dist/css/index.css';\n\nconst App = () => {\n  const client = Web3MQ.getInstance('YOUR_ACCESS_TOKEN');\n\n  const appType = () => {\n    // Use your own logic to decide which pattern to use\n    return 'pc'; // 'pc' | 'app' | 'mobile'\n  };\n\n  const logout = () => {\n    // logout function\n  };\n\n  if (client) {\n    // Redirect to the login page\n  }\n\n  return (\n    <Chat client={client} appType={appType} logout={logout}>\n      <DashBoard />\n      <Main />\n      <Channel>\n        <ChannelInner />\n      </Channel>\n    </Chat>\n  );\n};\n")))}f.isMDXComponent=!0}}]);