"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[7873],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||l;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4769:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],i={position:2},c="Client",s={unversionedId:"Web3MQ-SDK/JS-SDK/client/client",id:"Web3MQ-SDK/JS-SDK/client/client",title:"Client",description:"Events",source:"@site/docs/Web3MQ-SDK/JS-SDK/client/client.md",sourceDirName:"Web3MQ-SDK/JS-SDK/client",slug:"/Web3MQ-SDK/JS-SDK/client/",permalink:"/docs/Web3MQ-SDK/JS-SDK/client/",tags:[],version:"current",frontMatter:{position:2},sidebar:"tutorialSidebar",previous:{title:"Walletconnect",permalink:"/docs/Web3MQ-SDK/JS-SDK/authorization/Walletconnect"},next:{title:"Channel",permalink:"/docs/Web3MQ-SDK/JS-SDK/channel/"}},p={},m=[{value:"Events",id:"events",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Events",id:"events-1",level:2},{value:"on()",id:"on",level:3},{value:"off()",id:"off",level:3},{value:"once()",id:"once",level:3},{value:"emit()",id:"emit",level:3},{value:"Methods",id:"methods-1",level:2},{value:"getInstance()",id:"getinstance",level:3},{value:"Usage",id:"usage",level:4}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"client"},"Client"),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"Parameters Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/client/#on"},"on")),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null},"create pubsub")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/client/#off"},"off")),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null},"cancel pubsub")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/client/#once"},"once")),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null},"once pubsub")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/client/#emit"},"emit")),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null},"emit pubsub")))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"Parameters Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"your access token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"listeners"),(0,l.kt)("td",{parentName:"tr",align:null},"{}"),(0,l.kt)("td",{parentName:"tr",align:null},"pubsub list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/channel"},"channel")),(0,l.kt)("td",{parentName:"tr",align:null},"Channel Class"),(0,l.kt)("td",{parentName:"tr",align:null},"The channel correlation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/message"},"messages")),(0,l.kt)("td",{parentName:"tr",align:null},"Message Class"),(0,l.kt)("td",{parentName:"tr",align:null},"The messages correlation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/user"},"user")),(0,l.kt)("td",{parentName:"tr",align:null},"User Class"),(0,l.kt)("td",{parentName:"tr",align:null},"The user correlation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/contact"},"contact")),(0,l.kt)("td",{parentName:"tr",align:null},"Contact Class"),(0,l.kt)("td",{parentName:"tr",align:null},"The contact correlation")))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"Parameters Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/client/#getInstance"},"getInstance")),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null},"LoginParams or string")))),(0,l.kt)("h2",{id:"events-1"},"Events"),(0,l.kt)("h3",{id:"on"},"on()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"* on: (eventName: EventTypes, callback: any) => void;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from \"web2-mq\";\n\nconst client = Client.getInstance('YOUR_ACCESS_TOKEN');\n\nclient.on('channel.activeChange', (event) {\n  console.log(event)\n})\n")),(0,l.kt)("h3",{id:"off"},"off()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"* off: (eventName: EventTypes, callback?: any) => void;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from \"web2-mq\";\n\nconst client = Client.getInstance('YOUR_ACCESS_TOKEN');\n\nclient.off('channel.activeChange', (event) {\n  console.log(event)\n})\n")),(0,l.kt)("h3",{id:"once"},"once()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"* once: (eventName: EventTypes, callback?: any) => void;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from \"web2-mq\";\n\nconst client = Client.getInstance('YOUR_ACCESS_TOKEN');\n\nclient.once('channel.activeChange', (event) {\n  console.log(event)\n})\n")),(0,l.kt)("h3",{id:"emit"},"emit()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"* emit: (eventName: EventTypes, ...args: any[]) => void;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from 'web2-mq';\n\nconst client = Client.getInstance('YOUR_ACCESS_TOKEN');\n\nclient.emit('channel.activeChange', {\n  data: '',\n});\n")),(0,l.kt)("h2",{id:"methods-1"},"Methods"),(0,l.kt)("h3",{id:"getinstance"},"getInstance()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"Client.getInstance([LoginParams](/docs/Web3MQ-SDK/JS-SDK/types/#loginparams) | token: string);\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"create a client")),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"call ",(0,l.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/quickStart/#connect-metamask"},"Connect MeatMask")),(0,l.kt)("p",{parentName:"blockquote"},"call ",(0,l.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/utils/#getloginrandomsecret"},"getLoginRandomSecret()"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { login, getLoginRandomSecret } from 'web2-mq';\n\nasync function getParams() {\n  const address = ethereum.selectedAddress; //  call Connect MeatMask\n  // call getLoginRandomSecret\n  const randomSecret = await getLoginRandomSecret({\n    wallet_address: address,\n  });\n\n  const msg = `0x${Buffer.from(randomSecret, 'utf8').toString('hex')}`;\n  let signContent = `Web3MQ wants you to sign in with your Ethereum account:\n${address}\nSign-In With Ethereum Example Statement\nURI: https://swapchat.me\nVersion: 1\nChain ID: 1\nNonce: ${msg}\nIssued At: 2022-05-23T12:52:57.500Z\nExpiration Time: 2022-05-25T12:52:57.489Z`;\n  // @ts-ignore\n  const signature = await ethereum.request({\n    method: 'personal_sign',\n    params: [signContent, address, 'swapchat'],\n  });\n\n  return {\n    login_random_secret: randomSecret,\n    wallet_address: address,\n    signature,\n  };\n}\nconst initParams = getParams();\n\n// create client\nconst client = Client.getInstance(Params);\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from 'web2-mq';\n\nconst client = Client.getInstance('YOUR_ACCESS_TOKEN');\n")))}d.isMDXComponent=!0}}]);