"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[4575],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,_=p["".concat(i,".").concat(d)]||p[d]||m[d]||s;return r?n.createElement(_,o(o({ref:t},l),{},{components:r})):n.createElement(_,o({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=p;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var c=2;c<s;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2691:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),o=["components"],u={sidebar_position:3},i="User",c={unversionedId:"Web3MQ-SDK/Python-SDK/userapi",id:"Web3MQ-SDK/Python-SDK/userapi",title:"User",description:"User api list",source:"@site/docs/Web3MQ-SDK/Python-SDK/userapi.md",sourceDirName:"Web3MQ-SDK/Python-SDK",slug:"/Web3MQ-SDK/Python-SDK/userapi",permalink:"/docs/Web3MQ-SDK/Python-SDK/userapi",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Login",permalink:"/docs/Web3MQ-SDK/Python-SDK/login"},next:{title:"Room",permalink:"/docs/Web3MQ-SDK/Python-SDK/roomapi"}},l={},m=[{value:"User api list",id:"user-api-list",level:2},{value:"Get User info",id:"get-user-info",level:2},{value:"Search Users",id:"search-users",level:2},{value:"Add user to my contact",id:"add-user-to-my-contact",level:2},{value:"Get my contact list",id:"get-my-contact-list",level:2}],p={toc:m};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"user"},"User"),(0,s.kt)("h2",{id:"user-api-list"},"User api list"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Get User info"),(0,s.kt)("li",{parentName:"ul"},"search users"),(0,s.kt)("li",{parentName:"ul"},"Add user to my contact"),(0,s.kt)("li",{parentName:"ul"},"Get my contact list")),(0,s.kt)("h2",{id:"get-user-info"},"Get User info"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'from web3mq.client import Web3mqClient\n\nclient = Web3mqClient()\n\n# platform options twitter/instagram/facebook/discord\nplatform = "twitter"\n\n# User\'s username on the platform\nusername = "username"\n\nuserinfo = client.get_user_info(platform, username)\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"userinfo example")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "user_id": "user\'s OID",\n    "nick_name": "user\'s nick_name",\n    "twitter_username": "user\'s twitter_username",\n    "twitter_avatar": "user\'s twitter_avatar",\n    "instagram_username": "user\'s instagram_username",\n    "instagram_avatar": "user\'s instagram_avatar",\n    "facebook_username": "user\'s facebook_username",\n    "facebook_avatar": "user\'s facebook_avatar",\n    "discord_username": "user\'s discord_username",\n    "discord_avatar": "user\'s discord_avatar",\n    "opensea_username": "user\'s opensea_username",\n    "opensea_avatar": "user\'s opensea_avatar",\n    "eth_wallet_address": "user\'s eth_wallet_address",\n    "ens_name": "user\'s ens_name",\n    "status": "user\'s status",\n    "created_at": "the timestamp when user created"\n}\n')),(0,s.kt)("h2",{id:"search-users"},"Search Users"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"from web3mq.client import Web3mqClient\n\nclient = Web3mqClient()\n\n# the keyword what you want to search\nuserlist = client.search_users(keyword)\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"userlist example")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'[{\n    "user_id": "user\'s OID",\n    "nick_name": "user\'s nick_name",\n    "twitter_username": "user\'s twitter_username",\n    "twitter_avatar": "user\'s twitter_avatar",\n    "instagram_username": "user\'s instagram_username",\n    "instagram_avatar": "user\'s instagram_avatar",\n    "facebook_username": "user\'s facebook_username",\n    "facebook_avatar": "user\'s facebook_avatar",\n    "discord_username": "user\'s discord_username",\n    "discord_avatar": "user\'s discord_avatar",\n    "opensea_username": "user\'s opensea_username",\n    "opensea_avatar": "user\'s opensea_avatar",\n    "eth_wallet_address": "user\'s eth_wallet_address",\n    "ens_name": "user\'s ens_name",\n    "status": "user\'s status",\n    "created_at": "the timestamp when user created"\n}]\n')),(0,s.kt)("h2",{id:"add-user-to-my-contact"},"Add user to my contact"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Add an user to your contact list by user's OID")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'from web3mq.client import Web3mqClient\n\nclient = Web3mqClient()\n\nuser_id = "user_id"\nerrmsg = client.add_user_to_my_contact(user_id)\nif not errmsg:\n    print("add user to my contact success")\nelse:\n    print(errmsg)\n')),(0,s.kt)("h2",{id:"get-my-contact-list"},"Get my contact list"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"from web3mq.client import Web3mqClient\n\nclient = Web3mqClient()\npage = 1\nsize = 10\n\ncontact_list = client.get_my_contact(page, size)\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"contact_list example")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "user_id": "user\'s OID",\n        "nick_name": "user\'s nick_name",\n        "twitter_username": "user\'s twitter_username",\n        "twitter_avatar": "user\'s twitter_avatar",\n        "instagram_username": "user\'s instagram_username",\n        "instagram_avatar": "user\'s instagram_avatar",\n        "facebook_username": "user\'s facebook_username",\n        "facebook_avatar": "user\'s facebook_avatar",\n        "discord_username": "user\'s discord_username",\n        "discord_avatar": "user\'s discord_avatar",\n        "opensea_username": "user\'s opensea_username",\n        "opensea_avatar": "user\'s opensea_avatar",\n        "eth_wallet_address": "user\'s eth_wallet_address",\n        "ens_name": "user\'s ens_name",\n        "status": "user\'s status",\n        "created_at": "the timestamp when user created"\n    }\n]\n')))}d.isMDXComponent=!0}}]);