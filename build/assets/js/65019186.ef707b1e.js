(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[6244],{9951:function(e,t,n){"use strict";n.d(t,{A:function(){return b}});var a=n(7294),o=n(1262),l=n(4184),r=n.n(l),i="code-lineout_cZQd",c="code-box-demo_X7Ez",s="code-box-meta_GVCM",p="code-box-title_sfQs",d="code-box-description_bhuL",m="code-box-actions_vDQF",u="code-box-show-code_Yemp",g="code-icon_AL8q",k="code-icon-hide_dxEg",h="highlight-wrapper_JnmS",N="highlight-wrapper-hide_pcAC",b=function(e){var t=e.title,n=e.description,l=e.code,b=e.children,f=(0,a.useState)(!0),C=f[0],v=f[1];return a.createElement(o.Z,null,(function(){var e,o,f;return a.createElement("div",{className:i},a.createElement("div",{className:c},b),a.createElement("div",{className:s},a.createElement("div",{className:p},t),a.createElement("div",{className:d},n),l&&a.createElement("div",{className:m},a.createElement("span",{className:u},a.createElement("img",{className:r()(g,(e={},e[k]=C,e)),onClick:function(){return v(!C)},src:"https://gw.alipayobjects.com/zos/antfincdn/Z5c7kzvi30/expand.svg",alt:""}),a.createElement("img",{className:r()(g,(o={},o[k]=!C,o)),onClick:function(){return v(!C)},src:"https://gw.alipayobjects.com/zos/antfincdn/4zAaozCvUH/unexpand.svg",alt:""})))),l&&a.createElement("div",{className:r()(h,(f={},f[N]=!C,f))},l))}))}},1086:function(e,t,n){"use strict";var a=n(5861),o=n(7757),l=n.n(o),r=n(7294),i=n(1352);t.Z=function(){var e=(0,r.useMemo)((function(){var e=localStorage.getItem("PRIVATE_KEY")||"",t=localStorage.getItem("PUBLIC_KEY")||"",n=localStorage.getItem("userid")||"";return e&&t&&n?{PrivateKey:e,PublicKey:t,userid:n}:null}),[]),t=(0,r.useState)(e),n=t[0],o=t[1],c=(0,r.useState)(null),s=c[0],p=c[1],d=function(){var e=(0,a.Z)(l().mark((function e(){var t,n,a;return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=localStorage.getItem("PUBLIC_KEY")||"",n=localStorage.getItem("DID_KEY")||"",e.next=4,i.Client.init({connectUrl:localStorage.getItem("FAST_URL"),app_key:"vAUJTFXbBZRkEDRE",env:"dev",didKey:n,tempPubkey:t});case 4:a=e.sent,localStorage.setItem("FAST_URL",a),p(a);case 7:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return{keys:n,fastestUrl:s,init:d,logout:function(){localStorage.setItem("PRIVATE_KEY",""),localStorage.setItem("PUBLIC_KEY",""),localStorage.setItem("DID_KEY",""),localStorage.setItem("userid",""),o(null)},handleLoginEvent:function(e){if(e.data){if("login"===e.type){var t=e.data,n=t.privateKey,a=t.publicKey,l=t.tempPrivateKey,r=t.tempPublicKey,i=t.didKey,c=t.userid,s=t.address,p=t.pubkeyExpiredTimestamp;localStorage.setItem("userid",c),localStorage.setItem("PRIVATE_KEY",l),localStorage.setItem("PUBLIC_KEY",r),localStorage.setItem("WALLET_ADDRESS",s),localStorage.setItem("MAIN_PRIVATE_KEY",n),localStorage.setItem("MAIN_PUBLIC_KEY",a),localStorage.setItem("DID_KEY",i),localStorage.setItem("PUBKEY_EXPIRED_TIMESTAMP",String(p)),o({PrivateKey:l,PublicKey:r,userid:c})}if("register"===e.type){var d=e.data,m=d.privateKey,u=d.publicKey,g=d.address;localStorage.setItem("WALLET_ADDRESS",g),localStorage.setItem("MAIN_PRIVATE_KEY",m),localStorage.setItem("MAIN_PUBLIC_KEY",u)}}}}}},382:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return N},default:function(){return E},frontMatter:function(){return h},metadata:function(){return b},toc:function(){return C}});var a=n(7462),o=n(3366),l=n(7294),r=n(3905),i=n(9951),c=n(1352),s=n(4137),p=n(1086),d=function(){var e=(0,p.Z)(),t=e.keys,n=e.init,a=e.fastestUrl,o=e.logout;if((0,l.useEffect)((function(){n(),document.getElementsByTagName("body")[0].setAttribute("data-theme","light")}),[]),!t)return l.createElement(s.zx,{size:"large",type:"ghost"},l.createElement("a",{href:"/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/LoginModal#basic-usage",style:{textDecoration:"none"}},"Please login first"));if(!a)return null;var r=c.Client.getInstance(t);return l.createElement("div",{id:"box",style:{position:"relative",border:"1px solid #f2f2f2",minWidth:"375px",width:"100%",height:"300px",overflow:"auto"}},l.createElement(s.en,{containerId:"box",client:r,appType:s.KU.h5,logout:o},l.createElement(s.HE,null),l.createElement("div",{style:{height:"100%"}}),l.createElement("div",{style:{textAlign:"center"}},"Part of Content")))},m=["components"],u={toc:[]};function g(e){var t=e.components,n=(0,o.Z)(e,m);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { useEffect } from 'react';\nimport { Client } from '@web3mq/client';\nimport { AppTypeEnum, Chat, ConnectMessage, Button } from '@web3mq/react-components';\n\nimport useLogin from './hooks/useLogin';\n\nexport const ConnectMessageExample: React.FC = () => {\n  const { keys, init, fastestUrl, logout } = useLogin();\n  \n  useEffect(() => {\n    init();\n    document.body.setAttribute('data-theme', 'light');\n  }, [])\n\n  if (!keys) {\n    return (\n      <LoginModal \n        appType={appType}\n        handleLoginEvent={handleLoginEvent}\n        loginBtnNode={<Button size='large' type='ghost'>Login</Button>}\n      />\n    )\n  }\n  if (!fastestUrl) {\n    return null;\n  }\n\n  const client = Client.getInstance(keys);\n\n  return (\n    <div id='box' style={{position: 'relative', width: '100%',overflow: 'auto'}}>\n      <Chat containerId='box' client={client} appType={AppTypeEnum['h5']} logout={logout}>\n        <ConnectMessage />\n        <div>Part of Content</div>\n      </Chat>\n    </div>\n  );\n};\n")))}g.isMDXComponent=!0;var k=["components"],h={},N="ConnectMessage",b={unversionedId:"Web3MQ-UI-Components/Web3MQ-React/chatComponent/ConnectMessage",id:"Web3MQ-UI-Components/Web3MQ-React/chatComponent/ConnectMessage",title:"ConnectMessage",description:"ConnectMessage is a global prompt component used to indicate the status of a Websocket connection,and can only be used in the chat component.",source:"@site/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/ConnectMessage.md",sourceDirName:"Web3MQ-UI-Components/Web3MQ-React/chatComponent",slug:"/Web3MQ-UI-Components/Web3MQ-React/chatComponent/ConnectMessage",permalink:"/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/ConnectMessage",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ChannelHead",permalink:"/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/ChannelHead"},next:{title:"DashBoard",permalink:"/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/DashBoard"}},f={},C=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Api",id:"api",level:2},{value:"ConnectMessage",id:"connectmessage-1",level:3}],v={toc:C};function E(e){var t=e.components,n=(0,o.Z)(e,k);return(0,r.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"connectmessage"},"ConnectMessage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ConnectMessage")," is a global prompt component used to indicate the status of a Websocket connection,and can only be used in the ",(0,r.kt)("inlineCode",{parentName:"p"},"chat")," component."),(0,r.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.kt)("p",null,"User can customize text descriptions, icons and buttons for different states of the websocket,the default button is provided to reconnect when the websocket connection is closed, and the user can customize it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"btnNode")," props."),(0,r.kt)(i.A,{title:"Example",description:"This is the ConnectMessage example",code:(0,r.kt)(g,{mdxType:"ConnectMessageMdx"}),mdxType:"Layout"},(0,r.kt)(d,{mdxType:"ConnectMessageExample"})),(0,r.kt)("h2",{id:"api"},"Api"),(0,r.kt)("h3",{id:"connectmessage-1"},"ConnectMessage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The properties of the ConnectMessage are described as follows:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"btnNode"),(0,r.kt)("td",{parentName:"tr",align:null},"Set the custom ",(0,r.kt)("inlineCode",{parentName:"td"},"Button")," when websocket is closed"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connectDescription"),(0,r.kt)("td",{parentName:"tr",align:null},"Set the description when the websocket is connected"),(0,r.kt)("td",{parentName:"tr",align:null},"string","|","React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connectIcon"),(0,r.kt)("td",{parentName:"tr",align:null},"Set Icon when the websocket is connected"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"closedDescription"),(0,r.kt)("td",{parentName:"tr",align:null},"Set the description when the websocket is closed"),(0,r.kt)("td",{parentName:"tr",align:null},"string","|","React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"closedIcon"),(0,r.kt)("td",{parentName:"tr",align:null},"Set Icon when the websocket is closed"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openDescription"),(0,r.kt)("td",{parentName:"tr",align:null},"Set the description when the websocket is opened"),(0,r.kt)("td",{parentName:"tr",align:null},"string","|","React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"openIcon"),(0,r.kt)("td",{parentName:"tr",align:null},"Set Icon when the websocket is opened"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"isShow"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the component is visible or not"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))))}E.isMDXComponent=!0},3094:function(){},6601:function(){},9214:function(){},5568:function(){}}]);