"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[4862],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return y}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),o=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=o(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=o(n),y=r,g=m["".concat(l,".").concat(y)]||m[y]||u[y]||s;return n?a.createElement(g,p(p({ref:t},c),{},{components:n})):a.createElement(g,p({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,p=new Array(s);p[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var o=2;o<s;o++)p[o]=n[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7212:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return u}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),p=["components"],i={position:7},l="Type List",o={unversionedId:"Web3MQ-SDK/JS-SDK-V2/types/types",id:"Web3MQ-SDK/JS-SDK-V2/types/types",title:"Type List",description:"EventTypes",source:"@site/docs/Web3MQ-SDK/JS-SDK-V2/types/types.md",sourceDirName:"Web3MQ-SDK/JS-SDK-V2/types",slug:"/Web3MQ-SDK/JS-SDK-V2/types/",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/types/",tags:[],version:"current",frontMatter:{position:7},sidebar:"tutorialSidebar",previous:{title:"Utils",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/utils/"},next:{title:"Intro",permalink:"/docs/Web3MQ-SDK/Python-SDK/intro"}},c={},u=[{value:"EventTypes",id:"eventtypes",level:3},{value:"ServiceResponse",id:"serviceresponse",level:3},{value:"PageParams",id:"pageparams",level:3},{value:"BaseParams",id:"baseparams",level:2},{value:"KeyPairsType",id:"keypairstype",level:3},{value:"EthAccountType",id:"ethaccounttype",level:3},{value:"ActiveChannelType",id:"activechanneltype",level:3},{value:"ContactListItemType",id:"contactlistitemtype",level:3},{value:"ActionType",id:"actiontype",level:2},{value:"MessageStatus",id:"messagestatus",level:2},{value:"changeMessageStatusParams",id:"changemessagestatusparams",level:2},{value:"MessageListItem",id:"messagelistitem",level:2},{value:"SearchUsersResponse",id:"searchusersresponse",level:2},{value:"UpdateMyProfileResponse",id:"updatemyprofileresponse",level:2}],m={toc:u};function y(e){var t=e.components,n=(0,r.Z)(e,p);return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"type-list"},"Type List"),(0,s.kt)("h3",{id:"eventtypes"},"EventTypes"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"name"),(0,s.kt)("th",{parentName:"tr",align:null},"type"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"EVENT_MAP"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/eventCenter/"},"EVENT_MAP"))))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { EVENT_MAP } from './core/events';\n\nexport type EventTypes = 'all' | keyof typeof EVENT_MAP;\n")),(0,s.kt)("h3",{id:"serviceresponse"},"ServiceResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ServiceResponse {\n  data: any;\n  msg: string;\n  code: number;\n}\n")),(0,s.kt)("h3",{id:"pageparams"},"PageParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PageParams {\n  page: number;\n  size: number;\n}\n")),(0,s.kt)("h2",{id:"baseparams"},"BaseParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type BaseParams = {\n  userid: string;\n  signature: string;\n  timestamp: number;\n};\n")),(0,s.kt)("h3",{id:"keypairstype"},"KeyPairsType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type KeyPairsType = {\n  PrivateKey: string;\n  PublicKey: string;\n};\n")),(0,s.kt)("h3",{id:"ethaccounttype"},"EthAccountType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type EthAccountType = {\n  address: string;\n  balance: number;\n  shortAddress: string;\n};\n")),(0,s.kt)("h3",{id:"activechanneltype"},"ActiveChannelType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type ActiveChannelType = {\n  topic: string;\n  topic_type: string;\n};\n")),(0,s.kt)("h3",{id:"contactlistitemtype"},"ContactListItemType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type ContactListItemType = {\n  userid: string;\n};\n")),(0,s.kt)("h2",{id:"actiontype"},"ActionType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type ActionType = 'agree';\n")),(0,s.kt)("h2",{id:"messagestatus"},"MessageStatus"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type MessageStatus = 'delivered' | 'read';\n")),(0,s.kt)("h2",{id:"changemessagestatusparams"},"changeMessageStatusParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface changeMessageStatusParams extends BaseParams {\n  topic: string;\n  messages: string[];\n  status: MessageStatus;\n}\n")),(0,s.kt)("h2",{id:"messagelistitem"},"MessageListItem"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type MessageListItem = {\n  cipher_suite: string;\n  from: string;\n  topic: string;\n  from_sign: string;\n  messageid: string;\n  payload_type: string;\n  timestamp: number;\n  message_status: {\n    status: MessageStatus;\n    timestamp: number;\n  };\n  payload: string;\n  version: number;\n};\n")),(0,s.kt)("h2",{id:"searchusersresponse"},"SearchUsersResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type SearchUsersResponse = {\n  userid: string;\n  wallet_address: string;\n  wallet_type: string;\n};\n")),(0,s.kt)("h2",{id:"updatemyprofileresponse"},"UpdateMyProfileResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type UpdateMyProfileResponse = {\n  userid: string;\n  wallet_address: string;\n  wallet_type: string;\n  nickname: string;\n  avatar_url: string;\n};\n")))}y.isMDXComponent=!0}}]);