"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[5770],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),g=r,d=m["".concat(o,".").concat(g)]||m[g]||c[g]||s;return n?a.createElement(d,l(l({ref:t},u),{},{components:n})):a.createElement(d,l({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7900:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),l=["components"],i={position:4},o="Message",p={unversionedId:"Web3MQ-SDK/JS-SDK-V2/message/message",id:"Web3MQ-SDK/JS-SDK-V2/message/message",title:"Message",description:"messageList",source:"@site/docs/Web3MQ-SDK/JS-SDK-V2/message/message.md",sourceDirName:"Web3MQ-SDK/JS-SDK-V2/message",slug:"/Web3MQ-SDK/JS-SDK-V2/message/",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/message/",tags:[],version:"current",frontMatter:{position:4},sidebar:"tutorialSidebar",previous:{title:"Channel",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/channel/"},next:{title:"Authorization",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/authorization/"}},u={},c=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"init Client",id:"init-client",level:2},{value:"GetMessageList &amp; SendMessage",id:"getmessagelist--sendmessage",level:2},{value:"ChangeMessageStatus",id:"changemessagestatus",level:2}],m={toc:c};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"message"},"Message"),(0,s.kt)("p",null,"messageList"),(0,s.kt)("h2",{id:"properties"},"Properties"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"name"),(0,s.kt)("th",{parentName:"tr",align:null},"type"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"messageList"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK-V2/types/#messagelistitem"},"MessageListItem")," ","[ ]"," ","|"," null"),(0,s.kt)("td",{parentName:"tr",align:null},"message list")))),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"name"),(0,s.kt)("th",{parentName:"tr",align:null},"type"),(0,s.kt)("th",{parentName:"tr",align:null},"Parameters Description"),(0,s.kt)("th",{parentName:"tr",align:null},"response"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"getMessageList"),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK-V2/types/#pageparams"},"PageParams")),(0,s.kt)("td",{parentName:"tr",align:null},"none")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"changeMessageStatus"),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},"(messages: string[], status: ",(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK-V2/types/#messagestatus"},"MessageStatus"),")"),(0,s.kt)("td",{parentName:"tr",align:null},"none")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"sendMessage"),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},"(msg: string)"),(0,s.kt)("td",{parentName:"tr",align:null},"none")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"receive"),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},"receive message callback"),(0,s.kt)("td",{parentName:"tr",align:null},"none")))),(0,s.kt)("h2",{id:"init-client"},"init Client"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Web3MQ } from 'web3-mq';\n// sign MetaMask get keys\nconst keys = { PrivateKey, PublicKey };\n// ws host url\nconst HostURL = '94.16.119.221:23333/messages';\n// init client\nconst client = Web3MQ.Client.getInstance(keys, HostURL);\n")),(0,s.kt)("h2",{id:"getmessagelist--sendmessage"},"GetMessageList & SendMessage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"export const App = () => {\n  const handleEvent = (event: { type: any }) => {\n    if (event.type === 'message.getList' || event.type === 'message.new') {\n      console.log(client.message.messageList);\n    }\n  };\n\n  useEffect(() => {\n    client.on('message.getList', handleEvent);\n    client.on('message.new', handleEvent);\n    return () => {\n      client.off('message.getList');\n      client.off('message.new');\n    };\n  }, []);\n\n  useEffect(() => {\n    client.message.getMessageList({\n      page: 1,\n      size: 20,\n    });\n  }, []);\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          client.message.sendMessage('text');\n        }}>\n        send Message\n      </button>\n    </div>\n  );\n};\n")),(0,s.kt)("h2",{id:"changemessagestatus"},"ChangeMessageStatus"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"export const App = () => {\n  return (\n    <div>\n      <button\n        onClick={() => {\n          client.message.changeMessageStatus(['msgId']);\n        }}>\n        Change Message Status\n      </button>\n    </div>\n  );\n};\n")))}g.isMDXComponent=!0}}]);