(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[3602],{3017:function(e,t,n){"use strict";n.d(t,{e:function(){return r}});var a=n(7294),i=n(7462),s=function(e){return a.createElement("svg",(0,i.Z)({viewBox:"0 0 219 31"},e),a.createElement("path",{d:"M0 1V0h219v1a5 5 0 0 0-5 5v3c0 12.15-9.85 22-22 22H27C14.85 31 5 21.15 5 9V6a5 5 0 0 0-5-5z",fillRule:"evenodd"}))},o="docs-demo-device_gKpw",l="docs-demo-device__ios-notch_C8eR",r=function(e){var t=e.src;return a.createElement("div",{className:o},a.createElement(s,{className:l}),a.createElement("iframe",{src:t,loading:"lazy"}))}},9951:function(e,t,n){"use strict";n.d(t,{A:function(){return k}});var a=n(7294),i=n(1262),s=n(4184),o=n.n(s),l="code-lineout_cZQd",r="code-box-demo_X7Ez",c="code-box-meta_GVCM",u="code-box-title_sfQs",d="code-box-description_bhuL",m="code-box-actions_vDQF",p="code-box-show-code_Yemp",g="code-icon_AL8q",y="code-icon-hide_dxEg",h="highlight-wrapper_JnmS",v="highlight-wrapper-hide_pcAC",k=function(e){var t=e.title,n=e.description,s=e.code,k=e.children,f=(0,a.useState)(!0),E=f[0],b=f[1];return a.createElement(i.Z,null,(function(){var e,i,f;return a.createElement("div",{className:l},a.createElement("div",{className:r},k),a.createElement("div",{className:c},a.createElement("div",{className:u},t),a.createElement("div",{className:d},n),s&&a.createElement("div",{className:m},a.createElement("span",{className:p},a.createElement("img",{className:o()(g,(e={},e[y]=E,e)),onClick:function(){return b(!E)},src:"https://gw.alipayobjects.com/zos/antfincdn/Z5c7kzvi30/expand.svg",alt:""}),a.createElement("img",{className:o()(g,(i={},i[y]=!E,i)),onClick:function(){return b(!E)},src:"https://gw.alipayobjects.com/zos/antfincdn/4zAaozCvUH/unexpand.svg",alt:""})))),s&&a.createElement("div",{className:o()(h,(f={},f[v]=!E,f))},s))}))}},2928:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return T},contentTitle:function(){return M},default:function(){return D},frontMatter:function(){return L},metadata:function(){return A},toc:function(){return x}});var a=n(7462),i=n(3366),s=n(7294),o=n(3905),l=n(4137),r="commonButton_pGag",c=function(e){var t=e.text,n=e.onClick;return s.createElement("button",{className:r,onClick:n},t)},u="signMetaMaskContent_iScy",d="userId_dyK1",m=n(5861),p=n(7757),g=n.n(p),y=n(1352),h=function(){var e=(0,s.useMemo)((function(){var e=localStorage.getItem("PRIVATE_KEY")||"",t=localStorage.getItem("PUBLIC_KEY")||"",n=localStorage.getItem("userid")||"";return e&&t&&n?{PrivateKey:e,PublicKey:t,userid:n}:null}),[]),t=(0,s.useState)(e),n=t[0],a=t[1],i=(0,s.useState)(null),o=i[0],l=i[1],r=function(){var e=(0,m.Z)(g().mark((function e(){var t,n,a;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=localStorage.getItem("PUBLIC_KEY")||"",n=localStorage.getItem("DID_KEY")||"",e.next=4,y.Client.init({connectUrl:localStorage.getItem("FAST_URL"),app_key:"vAUJTFXbBZRkEDRE",env:"dev",didKey:n,tempPubkey:t});case 4:a=e.sent,localStorage.setItem("FAST_URL",a),l(a);case 7:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return{keys:n,fastestUrl:o,init:r,logout:function(){localStorage.setItem("PRIVATE_KEY",""),localStorage.setItem("PUBLIC_KEY",""),localStorage.setItem("DID_KEY",""),localStorage.setItem("userid",""),a(null)},handleLoginEvent:function(e){if(console.log(e,"eventData"),e.data){if("login"===e.type){var t=e.data,n=t.privateKey,i=t.publicKey,s=t.tempPrivateKey,o=t.tempPublicKey,l=t.didKey,r=t.userid,c=t.address,u=t.pubkeyExpiredTimestamp;localStorage.setItem("userid",r),localStorage.setItem("PRIVATE_KEY",s),localStorage.setItem("PUBLIC_KEY",o),localStorage.setItem("WALLET_ADDRESS",c),localStorage.setItem("MAIN_PRIVATE_KEY",n),localStorage.setItem("MAIN_PUBLIC_KEY",i),localStorage.setItem("DID_KEY",l),localStorage.setItem("PUBKEY_EXPIRED_TIMESTAMP",String(u)),a({PrivateKey:s,PublicKey:o,userid:r})}if("register"===e.type){var d=e.data,m=d.privateKey,p=d.publicKey,g=d.address;localStorage.setItem("WALLET_ADDRESS",g),localStorage.setItem("MAIN_PRIVATE_KEY",m),localStorage.setItem("MAIN_PUBLIC_KEY",p)}}}}},v=function(){var e=h(),t=e.keys,n=e.init,a=e.handleLoginEvent;if((0,s.useEffect)((function(){n().then(),document.getElementsByTagName("body")[0].setAttribute("data-theme","light")}),[]),!t){var i=null,o=localStorage.getItem("MAIN_PRIVATE_KEY"),r=localStorage.getItem("MAIN_PUBLIC_KEY"),m=localStorage.getItem("WALLET_ADDRESS");return r&&o&&m&&(i={publicKey:r,privateKey:o,walletAddress:m}),s.createElement(l._A,{keys:i,handleLoginEvent:a,appType:l.KU.pc,loginBtnNode:s.createElement(c,{text:"Register or login",onClick:function(){}}),containerId:""})}return s.createElement("div",{className:u,id:"register-demo"},s.createElement("div",{className:d},"your userid: ",t&&t.userid))},k=function(){return s.createElement("div",{style:{width:"100%"}},s.createElement(c,{text:"get Client instance",onClick:function(){var e=localStorage.getItem("PRIVATE_KEY")||"",t=localStorage.getItem("PUBLIC_KEY")||"",n=localStorage.getItem("userid")||"";if(e&&t&&n){var a=y.Client.getInstance({PrivateKey:e,PublicKey:t,userid:n});console.log("Client Instance: ",a)}else alert("You should execute the signMetaMask method first")}}))},f=function(e){var t=h(),n=t.keys,a=t.init,i=t.fastestUrl;if((0,s.useEffect)((function(){a()}),[]),!n)return s.createElement("div",{style:{color:"red"}},"You should execute the signMetaMask method first");if(!i)return null;var o=y.Client.getInstance(n);return s.createElement(s.Fragment,null,s.Children.map(e.children,(function(e){return s.cloneElement(e,{client:o})})))},E="createRoomContent_heb7",b="text_E0AM",K=function(e){var t,n=e.client,a=(0,s.useState)([]),i=a[0],o=a[1],l=function(){var e=(0,m.Z)(g().mark((function e(){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,null==n?void 0:n.channel.createRoom({});case 2:console.log("create Chat Room successful"),o(null==n?void 0:n.channel.channelList);case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),r=function(){var e=(0,m.Z)(g().mark((function e(){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,null==n?void 0:n.channel.queryChannels({page:1,size:20});case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),u=function(e){n.channel.channelList};return(0,s.useEffect)((function(){null==n||n.on("channel.getList",u),r()}),[]),s.createElement("div",{className:E},s.createElement(c,{text:"create Room",onClick:l}),s.createElement("div",{className:b},"your create Room currently: ",null==(t=i[0])?void 0:t.chatid))},I=function(e){var t=e.client,n=(0,s.useState)(""),a=n[0],i=n[1],o=(0,s.useState)(""),l=o[0],r=o[1],u=function(){var e=(0,m.Z)(g().mark((function e(){var n;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=6;break}return null!=(n=t.channel.channelList)&&n.length?t.channel.setActiveChannel(t.channel.channelList[0]):alert("You should create Chat Room"),e.next=4,t.message.sendMessage(a);case 4:i(""),r(t.message.msg_text);case 6:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),d=function(e){var n=e.type,a=t.message.msg_text;"message.delivered"===n&&r(a)};return(0,s.useEffect)((function(){t.on("channel.activeChange",d),t.on("message.delivered",d)}),[]),s.createElement("div",{style:{width:"100%"}},s.createElement("input",{style:{padding:"12px",marginRight:"5px"},type:"text",value:a,onChange:function(e){return i(e.target.value)}}),s.createElement(c,{text:"send message",onClick:u}),s.createElement("div",null,"your current message: ",l))},S=n(9951),C=n(3017),w=["components"],N={toc:[]};function P(e){var t=e.components,n=(0,i.Z)(e,w);return(0,o.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"  import React, {useEffect, useMemo, useState} from 'react';\n  import {Client, KeyPairsType} from '@web3mq/client';\n  import {AppTypeEnum, Chat, ConnectMessage, DashBoard, LoginModal} from \"@web3mq/react-components\";\n  import '@web3mq/react-components/dist/css/index.css';\n  import Main from \"./components/Main\";\n\n  // Root components\n  const App: React.FC = () => {\n    const hasKeys = useMemo(() => {\n      const PrivateKey = localStorage.getItem('PRIVATE_KEY') || '';\n      const PublicKey = localStorage.getItem('PUBLIC_KEY') || '';\n      const userid = localStorage.getItem('userid') || '';\n      if (PrivateKey && PublicKey && userid) {\n        return { PrivateKey, PublicKey, userid };\n      }\n      return null;\n    }, []);\n    const [keys, setKeys] = useState<KeyPairsType | null>(hasKeys);\n    const [fastestUrl, setFastUrl] = useState<string | null>(null);\n    const [appType, setAppType] = useState(\n        window.innerWidth <= 600 ? AppTypeEnum['h5'] : AppTypeEnum['pc']\n    );\n\n    const init = async () => {\n      const tempPubkey = localStorage.getItem('PUBLIC_KEY') || '';\n      const didKey = localStorage.getItem('DID_KEY') || '';\n      const fastUrl = await Client.init({\n        connectUrl: localStorage.getItem('FAST_URL'),\n        app_key: 'vAUJTFXbBZRkEDRE',\n        env: 'dev',\n        didKey,\n        tempPubkey,\n      });\n      localStorage.setItem('FAST_URL', fastUrl);\n      setFastUrl(fastUrl);\n    };\n    const handleLoginEvent = (eventData: any) => {\n      if (eventData.data) {\n        if (eventData.type === 'login') {\n          const {\n            privateKey,\n            publicKey,\n            tempPrivateKey,\n            tempPublicKey,\n            didKey,\n            userid,\n            address,\n            pubkeyExpiredTimestamp,\n          } = eventData.data;\n          localStorage.setItem('userid', userid);\n          localStorage.setItem('PRIVATE_KEY', tempPrivateKey);\n          localStorage.setItem('PUBLIC_KEY', tempPublicKey);\n          localStorage.setItem('WALLET_ADDRESS', address);\n          localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n          localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n          localStorage.setItem(`DID_KEY`, didKey);\n          localStorage.setItem('PUBKEY_EXPIRED_TIMESTAMP', String(pubkeyExpiredTimestamp));\n          setKeys({\n            PrivateKey: tempPrivateKey,\n            PublicKey: tempPublicKey,\n            userid,\n          });\n        }\n        if (eventData.type === 'register') {\n          const { privateKey, publicKey, address } = eventData.data;\n          localStorage.setItem('WALLET_ADDRESS', address);\n          localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n          localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n        }\n      }\n    };\n\n    useEffect(() => {\n      init();\n      document.getElementsByTagName('body')[0].setAttribute('data-theme', 'light');\n      window.addEventListener('resize', () => {\n        setAppType(\n            window.innerWidth <= 600 ? AppTypeEnum['h5'] : AppTypeEnum['pc']\n        );\n      });\n    }, []);\n\n    if (!keys) {\n      let mainKeys = null;\n      const mainPrivateKey = localStorage.getItem(`MAIN_PRIVATE_KEY`);\n      const mainPublicKey = localStorage.getItem(`MAIN_PUBLIC_KEY`);\n      const address = localStorage.getItem('WALLET_ADDRESS');\n      if (mainPublicKey && mainPrivateKey && address) {\n        mainKeys = {\n          publicKey: mainPublicKey,\n          privateKey: mainPrivateKey,\n          walletAddress: address,\n        };\n      }\n      return <LoginModal\n          keys={mainKeys || undefined}\n          handleLoginEvent={handleLoginEvent}\n          appType={AppTypeEnum.pc}\n          containerId={''}\n          loginBtnNode={\n            <button className=\"sign_btn\">\n              MetaMask\n            </button>\n          }\n      />;\n    }\n\n\n    if (!fastestUrl) {\n      return null;\n    }\n    const logout = () => {\n      localStorage.setItem('PRIVATE_KEY', '')\n      localStorage.setItem('PUBLIC_KEY', '')\n      localStorage.setItem('DID_KEY', '')\n      localStorage.setItem('userid', '')\n      setKeys(null);\n    };\n\n    const client = Client.getInstance(keys);\n\n\n\n    return (\n        <Chat client={client} appType={appType} logout={logout}>\n          <ConnectMessage />\n          <DashBoard />\n          <Main />\n        </Chat>\n    );\n  };\n\n  export default App;\n\n")))}P.isMDXComponent=!0;var _=["components"],L={position:1},M="QuickStart",A={unversionedId:"Web3MQ-SDK/JS-SDK/quickStart/quickStart",id:"Web3MQ-SDK/JS-SDK/quickStart/quickStart",title:"QuickStart",description:"This Quickstart tutorial walks you through the key concepts of Web3MQ using a sample react project and successfully",source:"@site/docs/Web3MQ-SDK/JS-SDK/quickStart/quickStart.md",sourceDirName:"Web3MQ-SDK/JS-SDK/quickStart",slug:"/Web3MQ-SDK/JS-SDK/quickStart/",permalink:"/docs/Web3MQ-SDK/JS-SDK/quickStart/",tags:[],version:"current",frontMatter:{position:1},sidebar:"tutorialSidebar",previous:{title:"PubSub",permalink:"/docs/Tutorials/PubSub/"},next:{title:"Client",permalink:"/docs/Web3MQ-SDK/JS-SDK/client/"}},T={},x=[{value:"Installation",id:"installation",level:2},{value:"Initialize Client",id:"initialize-client",level:2},{value:"Initialize Client and Connect to Web3MQ Network",id:"initialize-client-and-connect-to-web3mq-network",level:4},{value:"API endpoints",id:"api-endpoints",level:4},{value:"Register User",id:"register-user",level:2},{value:"Login demo",id:"login-demo",level:4},{value:"Code",id:"code",level:4},{value:"login registration using JavaScript SDK",id:"login-registration-using-javascript-sdk",level:4},{value:"login registration using react components",id:"login-registration-using-react-components",level:4},{value:"Installation",id:"installation-1",level:4},{value:"Get Client Instance",id:"get-client-instance",level:2},{value:"Use Demo",id:"use-demo",level:4},{value:"Code",id:"code-1",level:4},{value:"Create room",id:"create-room",level:2},{value:"Use Demo Code",id:"use-demo-code",level:4},{value:"Code",id:"code-2",level:4},{value:"Send message",id:"send-message",level:2},{value:"Code",id:"code-3",level:4},{value:"Full Example",id:"full-example",level:2},{value:"Root Components Code",id:"root-components-code",level:4}],R={toc:x};function D(e){var t=e.components,n=(0,i.Z)(e,_);return(0,o.kt)("wrapper",(0,a.Z)({},R,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart"},"QuickStart"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},'This Quickstart tutorial walks you through the key concepts of Web3MQ using a sample react project and successfully\nsend your first "hello world" to your friend!')),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Install Web3MQ's JS SDK using a package manager of your choice")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @web3mq/client\nor\nyarn add @web3mq/client\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The webpack version in your React application needs to be above ",(0,o.kt)("inlineCode",{parentName:"p"},"5.0.0"),", webpack ",(0,o.kt)("inlineCode",{parentName:"p"},"4.0.0")," is not supported at the moment."))),(0,o.kt)("h2",{id:"initialize-client"},"Initialize Client"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Initialize Client and Connect to Web3MQ Network")),(0,o.kt)("p",null,"In order to connect to the Web3MQ Network, both users and developers authenticate through wallet signatures, we\ndemonstrate below with an Ethereum wallet via Metamask, but Web3MQ is built to be compatible with wallets across\ndifferent chains."),(0,o.kt)("h4",{id:"initialize-client-and-connect-to-web3mq-network"},"Initialize Client and Connect to Web3MQ Network"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"While we are committed to building an open and collectively owned public good, our early stage testnet requires an API\nkey in order to connect. This is to control capacity to make sure that each early partner and developer is able to build\na great experience on top of Web3MQ. ",(0,o.kt)("a",{parentName:"p",href:"https://web3mq.com/apply"},"Apply here"),"."))),(0,o.kt)("p",null,"As Web3MQ is a federated network, our default JS SDK client has a method to help you connect to the best node for you."),(0,o.kt)("p",null,"Simply calling Client.init without connectUrl or an empty string returns a url of the best node determined for you, and\nthis url can be stored locally."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {Client} from '@web3mq/client';\n\n// You can save the bestEndpointUrl locally to skip endpoint search next time, which will save time, and\nconst bestEndpointUrl = await Client.init({\n    connectUrl: '', //\n    app_key: 'app_key', // temporary authorization key obtained by applying, will be removed in future testnets and mainnet\n});\n")),(0,o.kt)("p",null,"Calling Client.init with a specific connectUrl forces the client to connect to that specific node. When bestEndpointUrl\nis stored, it might be time-saving to connect directly instead of running the search again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {Client} from '@web3mq/client';\n\nconst fastUrl = await Client.init({\n    connectUrl: bestEndpointUrl, // takes in a valid endpoint url as input, when this paramter is given, client will always connect to that specific node.\n    app_key: 'app_key', // Appkey applied from our team\n});\n")),(0,o.kt)("h4",{id:"api-endpoints"},"API endpoints"),(0,o.kt)("p",null,"During this initial testing phase, we've hosted complete networks of Web3MQ nodes in different regions around the globe.\nConnect to these endpoints below, to access the Web3MQ Testnet."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet-us-west-1-1.web3mq.com"},"https://testnet-us-west-1-1.web3mq.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet-us-west-1-2.web3mq.com"},"https://testnet-us-west-1-2.web3mq.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet-ap-jp-1.web3mq.com"},"https://testnet-ap-jp-1.web3mq.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet-ap-jp-2.web3mq.com"},"https://testnet-ap-jp-2.web3mq.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet-ap-singapore-1.web3mq.com"},"https://testnet-ap-singapore-1.web3mq.com")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://testnet-ap-singapore-2.web3mq.com"},"https://testnet-ap-singapore-2.web3mq.com"))),(0,o.kt)("h2",{id:"register-user"},"Register User"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Sign with wallet to register user and obtain message encryption keys")),(0,o.kt)("p",null,"For any first-time user of Web3MQ's network, you'll need to register on Web3MQ's network. Web3MQ's JS SDK takes care of\nthe key generation process and subsequent wallet signing process. Client.register.register is a utility method that does\nthis automatically."),(0,o.kt)("h4",{id:"login-demo"},"Login demo"),(0,o.kt)(S.A,{title:"register",description:"Get your userid and key pair.",mdxType:"Layout"},(0,o.kt)(v,{mdxType:"SignMetaMaskButton"})),(0,o.kt)("h4",{id:"code"},"Code"),(0,o.kt)("h4",{id:"login-registration-using-javascript-sdk"},"login registration using JavaScript SDK"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import React, {useMemo, useState, useEffect} from "react";\nimport {Client, KeyPairsType, WalletType} from "@web3mq/client";\n\nconst loginDemo = async () => {\n    const password = \'123456\';\n    const didType: WalletType = \'eth\' // or \'starknet\';\n\n// 1. connect wallet and get user\n    const {address: didValue} = await Client.register.getAccount(didType);\n    const {userid, userExist} = await Client.register.getUserInfo({\n        did_value: didValue,\n        did_type: didType,\n    });\n// 2. create main key pairs\n    const {publicKey: localMainPublicKey, secretKey: localMainPrivateKey} = await Client.register.getMainKeypair({\n        password,\n        did_value: didValue,\n        did_type: didType,\n    });\n\n    if (!userExist) {\n//    register func\n        const {signContent} = await Client.register.getRegisterSignContent({\n            userid,\n            mainPublicKey: localMainPublicKey,\n            didType,\n            didValue,\n        });\n        const {sign: signature, publicKey: did_pubkey = ""} =\n            await Client.register.sign(signContent, didValue, didType);\n        const params = {\n            userid,\n            didValue,\n            mainPublicKey: localMainPublicKey,\n            did_pubkey,\n            didType,\n            nickname: "",\n            avatar_url: `https://cdn.stamp.fyi/avatar/${didValue}?s=300`,\n            signature,\n        };\n        const registerRes = await Client.register.register(params);\n        console.log(registerRes)\n    }\n// login func\n    const {\n        tempPrivateKey,\n        tempPublicKey,\n        pubkeyExpiredTimestamp,\n        mainPrivateKey,\n        mainPublicKey,\n    } = await Client.register.login({\n        password,\n        mainPublicKey: localMainPublicKey,\n        mainPrivateKey: localMainPrivateKey,\n        userid,\n        didType,\n        didValue,\n    });\n}\n\nloginDemo()\n')),(0,o.kt)("h4",{id:"login-registration-using-react-components"},"login registration using react components"),(0,o.kt)("h4",{id:"installation-1"},"Installation"),(0,o.kt)("p",null,"Install Web3MQ's react components using a package manager of your choice"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @web3mq/react-components\nor\nyarn add @web3mq/react-components\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, {useEffect, useState} from "react";\nimport {AppTypeEnum, LoginModal} from "@web3mq/react-components";\nimport "@web3mq/react-components/dist/css/index.css";\nimport {Client} from "@web3mq/client";\n\nconst App: React.FC = () => {\n    const [fastestUrl, setFastUrl] = useState<string | null>(null);\n    const [isLogin, setIsLogin] = useState(false);\n    const handleLoginEvent = (event: any) => {\n        console.log(event, "event");\n        if (event.data && event.type === "login") {\n            setIsLogin(true);\n        }\n    };\n\n    const init = async () => {\n        const tempPubkey = localStorage.getItem("PUBLIC_KEY") || "";\n        const didKey = localStorage.getItem("DID_KEY") || "";\n        const fastUrl = await Client.init({\n            connectUrl: localStorage.getItem("FAST_URL"),\n            app_key: "vAUJTFXbBZRkEDRE",\n            env: "dev",\n            didKey,\n            tempPubkey,\n        });\n        localStorage.setItem("FAST_URL", fastUrl);\n        setFastUrl(fastUrl);\n    };\n\n    useEffect(() => {\n        init();\n        document.body.setAttribute("data-theme", "light");\n    }, []);\n    if (!fastestUrl) {\n        return null;\n    }\n\n    let mainKeys = null;\n    const mainPrivateKey = localStorage.getItem(`MAIN_PRIVATE_KEY`);\n    const mainPublicKey = localStorage.getItem(`MAIN_PUBLIC_KEY`);\n    const address = localStorage.getItem("WALLET_ADDRESS");\n    if (mainPublicKey && mainPrivateKey && address) {\n        mainKeys = {\n            publicKey: mainPublicKey,\n            privateKey: mainPrivateKey,\n            walletAddress: address,\n        };\n    }\n\n    return (\n        <div>\n            {isLogin ? (\n                <div>login success</div>\n            ) : (\n                <LoginModal\n                    keys={mainKeys || undefined}\n                    handleLoginEvent={handleLoginEvent}\n                    appType={AppTypeEnum.pc}\n                    containerId={""}\n                    loginBtnNode={<button className="sign_btn">MetaMask</button>}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n\n\n')),(0,o.kt)("h2",{id:"get-client-instance"},"Get Client Instance"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Get Client Instance")),(0,o.kt)("h4",{id:"use-demo"},"Use Demo"),(0,o.kt)(S.A,{title:"Client",description:"Get the client instance.You can see the Client object in the console.",mdxType:"Layout"},(0,o.kt)(k,{mdxType:"InitClientButton"})),(0,o.kt)("h4",{id:"code-1"},"Code"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"After successful login, you can get the secret key pair from the returned result"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"\nconst {\n    tempPrivateKey,\n    tempPublicKey,\n    pubkeyExpiredTimestamp,\n    mainPrivateKey,\n    mainPublicKey,\n} = loginRes\n\nconst keys = {\n    PrivateKey: tempPrivateKey,\n    PublicKey: tempPublicKey,\n    userid: localStorage.getItem('userid')\n};\n\nconst client = Client.getInstance(keys);\n")),(0,o.kt)("h2",{id:"create-room"},"Create room"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"After initializing the client and registering your user, the next step is to connect to a room.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You need to get channels from ",(0,o.kt)("inlineCode",{parentName:"p"},"client.channel.queryChannels")," to initialize ",(0,o.kt)("inlineCode",{parentName:"p"},"client.channel.channelList"),", you can get the latest channels from ",(0,o.kt)("inlineCode",{parentName:"p"},"client.channel.channelList")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"channel.getlist")," event when you have successfully created channel.")),(0,o.kt)("h4",{id:"use-demo-code"},"Use Demo Code"),(0,o.kt)(S.A,{title:"create Room",description:"create your Chat Room.",mdxType:"Layout"},(0,o.kt)(f,{mdxType:"PreButton"},(0,o.kt)(K,{mdxType:"CreateRoomButton"}))),(0,o.kt)("h4",{id:"code-2"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"client.channel.createRoom();\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, {useEffect} from \"react\";\nimport { Client, EventTypes } from '@web3mq/client';\nexport const App = () => {\n    const client = Client.getInstance(keys);\n    const getChannelList = async() => {\n        await client.channel.queryChannels({page: 1, size: 20});\n    };\n    const handleEvent = (props: { type: EventTypes }) => {\n        const { type } = props;\n        const { channelList } = client.channel;\n        if (!channelList) return;\n        if (type === 'channel.getList') {\n            // `channel.getList` will be triggered when you fetch channels or create new channels, in this event you can get the latest status from client.channel.channelList\n            console.log('query channels': channelList);\n        }\n    } \n    useEffect(() => {\n        client.on('channel.getList', handleEvent);\n        getChannelList();\n        return () => {\n            client.off('channel.getList', handleEvent);\n        }\n    }, [])\n\n    return (\n        <button\n            onClick={() => {\n                client.channel.createRoom();\n            }}>\n            createGroup\n        </button>\n    )\n}\n")),(0,o.kt)("h2",{id:"send-message"},"Send message"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Similarly you need to initialize ",(0,o.kt)("inlineCode",{parentName:"p"},"client.message.messageList")," by ",(0,o.kt)("inlineCode",{parentName:"p"},"client.message.getMessageList")," to get the latest messages in the message event afterwards.")),(0,o.kt)("h4",{id:"code-3"},"Code"),(0,o.kt)(S.A,{title:"send message",description:"send your first message.",mdxType:"Layout"},(0,o.kt)(f,{mdxType:"PreButton"},(0,o.kt)(I,{mdxType:"SendMessageButton"}))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"client.message.sendMessage('Hello World');\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, {useEffect} from \"react\";\nimport { Client, EventTypes } from '@web3mq/client';\n\nexport const App = () => {\n    const client = Client.getInstance(keys);\n    const sendMessage = async () => {\n        await client.message.sendMessage('Hello World');\n    };\n    const handleEvent = async (props: { type: EventTypes }) => {\n        const { type } = props;\n        const { msg_text, messageList } = client.message;\n        const { channelList, activeChannel } = client.channel;\n        if (!channelList) return;\n        if (type === 'channel.getList') {\n            await client.channel.setActiveChannel(client.channel.channelList[0]);\n            console.log('the current channelList is: ', channelList);\n        }\n        if (type === 'channel.activeChange') {\n            await client.message.getMessageList({page: 1, size: 20});\n            console.log('the current activeChange is: ', activeChannel);\n        }\n        if (type === 'message.getList') {\n            console.log('the current messageList is: ', messageList)\n        }\n        if (type === 'message.send') {\n            console.log('you are sending a message, the message content is: ', msg_text);\n            console.log('the latest MessageList when you send a message: ', messageList);\n        }\n        if (type === 'message.delivered') {\n            console.log('the message you sent was successfully delivered');\n            console.log('the latest MessageList when you send a message: ', messageList);\n        }\n    }\n    useEffect(() => {\n        client.channel.queryChannels({page: 1, size: 20});\n        client.on('channel.getList', handleEvent);\n        client.on('channel.activeChange', handleEvent);\n        client.on('message.getList', handleEvent);\n        client.on('message.send', handleEvent);\n        client.on('message.delivered', handleEvent);\n        () => {\n            client.on('channel.getList', handleEvent);\n            client.off('channel.activeChange', handleEvent);\n            client.on('message.getList', handleEvent);\n            client.on('message.send', handleEvent);\n            client.off('message.delivered', handleEvent);\n        }\n    }, []);\n\n    return (\n        <button\n            onClick={sendMessage}>\n            sendMessage\n        </button>\n    )\n};\n")),(0,o.kt)("h2",{id:"full-example"},"Full Example"),(0,o.kt)("blockquote",null,(0,o.kt)("ol",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ol"},"Copy the Root Components Code to App.tsx"),(0,o.kt)("li",{parentName:"ol"},"Create a Child.tsx file and copy the Child Components Code to Child.tsx"))),(0,o.kt)(S.A,{title:"Example",description:"This is the full example",code:(0,o.kt)(P,{mdxType:"AppMdx"}),mdxType:"Layout"},(0,o.kt)(C.e,{src:"https://web3-mq-react-example.pages.dev/",mdxType:"Example"})),(0,o.kt)("h4",{id:"root-components-code"},"Root Components Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, {useEffect, useMemo, useState} from 'react';\nimport {Client, KeyPairsType, WalletType} from '@web3mq/client';\nimport {AppTypeEnum, LoginModal} from \"@web3mq/react-components\";\nimport '@web3mq/react-components/dist/css/index.css';\n\n// Root components\nconst App: React.FC = () => {\n    const hasKeys = useMemo(() => {\n        const PrivateKey = localStorage.getItem('PRIVATE_KEY') || '';\n        const PublicKey = localStorage.getItem('PUBLIC_KEY') || '';\n        const userid = localStorage.getItem('userid') || '';\n        if (PrivateKey && PublicKey && userid) {\n            return { PrivateKey, PublicKey, userid };\n        }\n        return null;\n    }, []);\n    const [keys, setKeys] = useState<KeyPairsType | null>(hasKeys);\n    const [fastestUrl, setFastUrl] = useState<string | null>(null);\n    const [groupMsg, setGroupMsg] = useState('');\n    const [groupChatMsgList, setGroupChatMsgList] = useState([]);\n    const [chatRoomName, setChatRoomName] = useState('');\n\n    const init = async () => {\n        const tempPubkey = localStorage.getItem('PUBLIC_KEY') || '';\n        const didKey = localStorage.getItem('DID_KEY') || '';\n        const fastUrl = await Client.init({\n            connectUrl: localStorage.getItem('FAST_URL'),\n            app_key: 'vAUJTFXbBZRkEDRE',\n            env: 'dev',\n            didKey,\n            tempPubkey,\n        });\n        localStorage.setItem('FAST_URL', fastUrl);\n        setFastUrl(fastUrl);\n    };\n    const handleLoginEvent = (eventData: any) => {\n        if (eventData.data) {\n            if (eventData.type === 'login') {\n                const {\n                    privateKey,\n                    publicKey,\n                    tempPrivateKey,\n                    tempPublicKey,\n                    didKey,\n                    userid,\n                    address,\n                    pubkeyExpiredTimestamp,\n                } = eventData.data;\n                localStorage.setItem('userid', userid);\n                localStorage.setItem('PRIVATE_KEY', tempPrivateKey);\n                localStorage.setItem('PUBLIC_KEY', tempPublicKey);\n                localStorage.setItem('WALLET_ADDRESS', address);\n                localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n                localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n                localStorage.setItem(`DID_KEY`, didKey);\n                localStorage.setItem('PUBKEY_EXPIRED_TIMESTAMP', String(pubkeyExpiredTimestamp));\n                setKeys({\n                    PrivateKey: tempPrivateKey,\n                    PublicKey: tempPublicKey,\n                    userid,\n                });\n            }\n            if (eventData.type === 'register') {\n                const { privateKey, publicKey, address } = eventData.data;\n                localStorage.setItem('WALLET_ADDRESS', address);\n                localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n                localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n            }\n        }\n    };\n\n    useEffect(() => {\n        init();\n        document.getElementsByTagName('body')[0].setAttribute('data-theme', 'light');\n    }, []);\n\n    if (!keys) {\n        let mainKeys = null;\n        const mainPrivateKey = localStorage.getItem(`MAIN_PRIVATE_KEY`);\n        const mainPublicKey = localStorage.getItem(`MAIN_PUBLIC_KEY`);\n        const address = localStorage.getItem('WALLET_ADDRESS');\n        if (mainPublicKey && mainPrivateKey && address) {\n            mainKeys = {\n                publicKey: mainPublicKey,\n                privateKey: mainPrivateKey,\n                walletAddress: address,\n            };\n        }\n        return <LoginModal\n            keys={mainKeys || undefined}\n            handleLoginEvent={handleLoginEvent}\n            appType={AppTypeEnum.pc}\n            containerId={''}\n            loginBtnNode={\n                <button className=\"sign_btn\">\n                    MetaMask\n                </button>\n            }\n        />;\n    }\n\n\n    if (!fastestUrl) {\n        return null;\n    }\n    const handleEvent = (event: any) => {\n        console.log(event, 'event');\n    };\n    const client = Client.getInstance(keys);\n    client.on('channel.activeChange', handleEvent);\n    client.on('channel.created', handleEvent);\n    client.on('message.delivered', handleEvent);\n    client.on('channel.getList', handleEvent);\n    client.on('channel.updated', handleEvent);\n\n    const createRoom = async () => {\n        await client.channel.createRoom({\n            group_name: chatRoomName || 'default room',\n        });\n        await client.channel.queryChannels({\n            page: 1,\n            size: 20,\n        });\n        if (client.channel.channelList) {\n            await client.channel.setActiveChannel(client.channel.channelList[0]);\n        }\n    };\n\n    const sendMsg = async () => {\n        if (!groupMsg) {\n            alert('message required');\n        }\n        await client.message.sendMessage(groupMsg);\n    };\n\n    return (\n        <div>\n            <div>\n                <h1>chat</h1>\n                <div>\n                    Chat room name :\n                    <input\n                        type=\"text\"\n                        value={chatRoomName}\n                        onChange={(e) => setChatRoomName(e.target.value)}\n                    />\n                </div>\n                <button onClick={createRoom}>createRoom</button>\n                <div>\n                    msg :<input type=\"text\" value={groupMsg} onChange={(e) => setGroupMsg(e.target.value)} />\n                </div>\n                <button onClick={sendMsg}>send</button>\n                <div>\n                    <ul>\n                        {groupChatMsgList.map((item: any, index) => {\n                            return <li>{item.content}</li>;\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n\n")))}D.isMDXComponent=!0},3094:function(){},6601:function(){},9214:function(){},5568:function(){}}]);