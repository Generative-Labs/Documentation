"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[3183],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=a,f=d["".concat(c,".").concat(g)]||d[g]||l[g]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={nav:{title:"docs"},title:"Signature",order:20,sidebar_position:20},o="Web3MQ Signature",s={unversionedId:"Web3MQ-API/signature",id:"Web3MQ-API/signature",title:"Signature",description:"- Web3MQ use ed25519 key pair for signing of requests",source:"@site/docs/Web3MQ-API/signature.md",sourceDirName:"Web3MQ-API",slug:"/Web3MQ-API/signature",permalink:"/docs/Web3MQ-API/signature",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{nav:{title:"docs"},title:"Signature",order:20,sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Chat",permalink:"/docs/Web3MQ-API/chat"},next:{title:"ProtoType",permalink:"/docs/Web3MQ-API/ProtoType"}},c={},u=[{value:"Signing requests data",id:"signing-requests-data",level:2}],p={toc:u};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"web3mq-signature"},"Web3MQ Signature"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Web3MQ use ed25519 key pair for signing of requests")),(0,a.kt)("h2",{id:"signing-requests-data"},"Signing requests data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { Ed25519SignatureApp } from 'Web3MQ-Docs';\n\nexport default () => <Ed25519SignatureApp />;\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"code example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Common.js and ECMAScript Modules (ESM)\nimport * as ed from '@starcoin/stc-ed25519';\n\nconst Uint8ToBase64String = (u8a: any) => {\n  return btoa(String.fromCharCode.apply(null, u8a));\n};\n\nconst Ed25519Sign = async (privateKey: any, message: Uint8Array) => {\n  const signature = await ed.sign(message, privateKey);\n  return signature;\n};\n\nlet content_need_to_signing = 'content_need_to_signing';\n\nlet bytes = await Ed25519Sign(\n  PrivateKey,\n  new TextEncoder().encode(content_need_to_signing),\n);\n\nlet signature = Uint8ToBase64String(bytes);\n")))}l.isMDXComponent=!0}}]);