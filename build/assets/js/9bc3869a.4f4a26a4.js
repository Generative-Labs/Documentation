"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[5550],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),y=p(r),f=a,d=y["".concat(u,".").concat(f)]||y[f]||l[f]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},2272:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],c={sidebar_position:35},u=void 0,p={unversionedId:"Web3MQ-API/ed25519key",id:"Web3MQ-API/ed25519key",title:"ed25519key",description:"Generate ed25519 key pair",source:"@site/docs/Web3MQ-API/ed25519key.md",sourceDirName:"Web3MQ-API",slug:"/Web3MQ-API/ed25519key",permalink:"/docs/Web3MQ-API/ed25519key",tags:[],version:"current",sidebarPosition:35,frontMatter:{sidebar_position:35},sidebar:"tutorialSidebar",previous:{title:"Heartbeat",permalink:"/docs/Web3MQ-API/heartbeat"},next:{title:"Contact",permalink:"/docs/Web3MQ-API/contact/"}},s={},l=[],y={toc:l};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Generate ed25519 key pair")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/starcoinorg/stc-ed25519"},"https://github.com/starcoinorg/stc-ed25519")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @starcoin/stc-ed25519\n\n# or\nnpm install @starcoin/stc-ed25519\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Common.js and ECMAScript Modules (ESM)\nimport * as ed from '@starcoin/stc-ed25519';\n\nfunction ByteArrayToHexString(byteArray) {\n  return Array.from(byteArray, function (byte) {\n    return ('0' + (byte & 0xff).toString(16)).slice(-2);\n  }).join('');\n}\n\nconst GenerateEd25519KeyPair = async () => {\n  let privateObj = ed.utils.randomPrivateKey();\n\n  let pubkeyObj = await ed.getPublicKey(privateObj);\n\n  let PrivateKey = ByteArrayToHexString(privateObj);\n  let PublicKey = ByteArrayToHexString(pubkeyObj);\n  return {\n    PrivateKey,\n    PublicKey,\n  };\n};\n\nconst { PrivateKey, PublicKey } = await GenerateEd25519KeyPair();\n\n// \u26a0\ufe0f Keep your private key in safe place\n")))}f.isMDXComponent=!0}}]);