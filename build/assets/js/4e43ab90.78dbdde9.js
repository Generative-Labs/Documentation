"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[5004],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,g=d["".concat(i,".").concat(u)]||d[u]||m[u]||s;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<s;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7489:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),l=["components"],o={position:4},i="Messages",p={unversionedId:"Web3MQ-SDK/JS-SDK/message/message",id:"Web3MQ-SDK/JS-SDK/message/message",title:"Messages",description:"Properties",source:"@site/docs/Web3MQ-SDK/JS-SDK/message/message.md",sourceDirName:"Web3MQ-SDK/JS-SDK/message",slug:"/Web3MQ-SDK/JS-SDK/message/",permalink:"/docs/Web3MQ-SDK/JS-SDK/message/",tags:[],version:"current",frontMatter:{position:4},sidebar:"tutorialSidebar",previous:{title:"Channel",permalink:"/docs/Web3MQ-SDK/JS-SDK/channel/"},next:{title:"Contact",permalink:"/docs/Web3MQ-SDK/JS-SDK/contact/"}},c={},m=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"Properties",id:"properties-1",level:2},{value:"activeMessage",id:"activemessage",level:3},{value:"Get",id:"get",level:4},{value:"Returns",id:"returns",level:4},{value:"messageList",id:"messagelist",level:3},{value:"Get",id:"get-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Methods",id:"methods-1",level:2},{value:"getMessageList()",id:"getmessagelist",level:3},{value:"loadMoreMessageList()",id:"loadmoremessagelist",level:3},{value:"openThread()",id:"openthread",level:3},{value:"loadMoreThreadList()",id:"loadmorethreadlist",level:3}],d={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"messages"},"Messages"),(0,s.kt)("h2",{id:"properties"},"Properties"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"name"),(0,s.kt)("th",{parentName:"tr",align:null},"type"),(0,s.kt)("th",{parentName:"tr",align:null},"Parameters Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"activeMessage"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#messageresponse"},"MessageResponse")," ","|"," null"),(0,s.kt)("td",{parentName:"tr",align:null},"current active message")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"messageList"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#messageresponse"},"MessageResponse"),"[ ]"," ","|"," null"),(0,s.kt)("td",{parentName:"tr",align:null},"message list")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"threadList"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#messageresponse"},"MessageResponse"),"[ ]"," ","|"," null"),(0,s.kt)("td",{parentName:"tr",align:null},"thread list")))),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"name"),(0,s.kt)("th",{parentName:"tr",align:null},"type"),(0,s.kt)("th",{parentName:"tr",align:null},"Parameters Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/message/#getmessagelist"},"getMessageList")),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},"{ room_id: string }")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/message/#loadmoremessagelist"},"loadMoreMessageList")),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},"null")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/message/#openthread"},"openThread")),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/types/#messageresponse"},"MessageResponse"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/message/#loadmorethreadlist"},"loadMoreThreadList")),(0,s.kt)("td",{parentName:"tr",align:null},"function"),(0,s.kt)("td",{parentName:"tr",align:null},"null")))),(0,s.kt)("h2",{id:"properties-1"},"Properties"),(0,s.kt)("h3",{id:"activemessage"},"activeMessage"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"The currently selected message")),(0,s.kt)("h4",{id:"get"},"Get"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.messages.activeMessage;\n')),(0,s.kt)("h4",{id:"returns"},"Returns"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Object"),": ",(0,s.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/types/#messageresponse"},"MessageResponse"))),(0,s.kt)("h3",{id:"messagelist"},"messageList"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Current chat room message logs")),(0,s.kt)("h4",{id:"get-1"},"Get"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.messages.messageList;\n')),(0,s.kt)("h4",{id:"returns-1"},"Returns"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Array"),": ",(0,s.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/types/#messageresponse"},"MessageResponse"),"[]")),(0,s.kt)("h2",{id:"methods-1"},"Methods"),(0,s.kt)("h3",{id:"getmessagelist"},"getMessageList()"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Changes the messageList property on the current object and notifies the subscriber of the update")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"* getMessageList: (props: { room_id: string; }) => Promise<void>;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.messages\n  .getMessageList({\n    room_id: "YOUR_ROOM_ID",\n  })\n  .then((res) => {\n    console.log(res);\n  });\n// After the request is completed, the data will be synchronized to the client\nconsole.log(client.messages.messageList);\n')),(0,s.kt)("h3",{id:"loadmoremessagelist"},"loadMoreMessageList()"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"load more message list and notifies the subscriber of the update")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"* loadMoreMessageList: () => Promise<unknown>;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.messages.loadMoreMessageList().then((res) => {\n  console.log(res);\n});\n\n// After the request is completed, the data will be synchronized to the client\nconsole.log(client.messages.messageList);\n')),(0,s.kt)("h3",{id:"openthread"},"openThread()"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Changes the activeMessage and threadList property on the current object and notifies the subscriber of the update")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"* openThread: (message: MessageResponse | null) => Promise<void>;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.messages.openThread(message: MessageResponse);\n\n// After the request is completed, the data will be synchronized to the client\nconsole.log(client.messages.threadList);\n\n')),(0,s.kt)("h3",{id:"loadmorethreadlist"},"loadMoreThreadList()"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"load more thread list and notifies the subscriber of the update")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"loadMoreThreadList: () => Promise<unknown>;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Web3MQ } from "web3-mq";\n\nconst client = Web3MQ.getInstance("YOUR_ACCESS_TOKEN");\n\nclient.messages.loadMoreThreadList().then((res) => {\n  console.log(res);\n});\n\n// After the request is completed, the data will be synchronized to the client\nconsole.log(client.messages.messageList);\n')))}u.isMDXComponent=!0}}]);