"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[3988],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),m=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(t),g=r,u=c["".concat(l,".").concat(g)]||c[g]||d[g]||s;return t?a.createElement(u,o(o({ref:n},p),{},{components:t})):a.createElement(u,o({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<s;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6581:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return d}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),o=["components"],i={},l=void 0,m={unversionedId:"Web3MQ-SDK/JS-SDK/types/types",id:"Web3MQ-SDK/JS-SDK/types/types",title:"types",description:"---",source:"@site/docs/Web3MQ-SDK/JS-SDK/types/types.md",sourceDirName:"Web3MQ-SDK/JS-SDK/types",slug:"/Web3MQ-SDK/JS-SDK/types/",permalink:"/docs/Web3MQ-SDK/JS-SDK/types/",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"eventCenter",permalink:"/docs/Web3MQ-SDK/JS-SDK/eventCenter/"},next:{title:"Utils",permalink:"/docs/Web3MQ-SDK/JS-SDK/utils/"}},p={},d=[{value:"position: 8",id:"position-8",level:2},{value:"EventTypes",id:"eventtypes",level:3},{value:"ServiceResponse",id:"serviceresponse",level:3},{value:"PageParams",id:"pageparams",level:3},{value:"GetRoomsParams",id:"getroomsparams",level:3},{value:"GetChatsByUserIdParams",id:"getchatsbyuseridparams",level:3},{value:"GetChatsByUserIdResponse",id:"getchatsbyuseridresponse",level:3},{value:"GetMessageByIdParams",id:"getmessagebyidparams",level:3},{value:"CreateThreadsParams",id:"createthreadsparams",level:3},{value:"GetThreadsParams",id:"getthreadsparams",level:3},{value:"UserInfoInterface",id:"userinfointerface",level:3},{value:"RoomResponse",id:"roomresponse",level:3},{value:"GetRoomInfoParams",id:"getroominfoparams",level:3},{value:"AddMemberToRoomParams",id:"addmembertoroomparams",level:3},{value:"DelMemberFromRoomParams",id:"delmemberfromroomparams",level:3},{value:"GetMessageParams",id:"getmessageparams",level:3},{value:"LoginRandomSecret",id:"loginrandomsecret",level:3},{value:"LoginParams",id:"loginparams",level:3},{value:"LoginResponse",id:"loginresponse",level:3},{value:"LoginRandomSecretParams",id:"loginrandomsecretparams",level:3},{value:"PlatformType",id:"platformtype",level:3},{value:"PLATFORM_ENUM",id:"platform_enum",level:3},{value:"RegisterParams",id:"registerparams",level:3},{value:"UserInfo",id:"userinfo",level:3},{value:"SearchFormatUserInfo",id:"searchformatuserinfo",level:3},{value:"CreateContractsParams",id:"createcontractsparams",level:3},{value:"UpdateWalletAddressParams",id:"updatewalletaddressparams",level:3},{value:"GetOpenSeaAssetParams",id:"getopenseaassetparams",level:3},{value:"GetOpenSeaAssetResponse",id:"getopenseaassetresponse",level:3},{value:"MessageResponse",id:"messageresponse",level:3},{value:"ChannelResponse",id:"channelresponse",level:3},{value:"MsgType",id:"msgtype",level:3},{value:"SendMessageData",id:"sendmessagedata",level:3},{value:"MembersItem",id:"membersitem",level:3},{value:"ActiveMemberItem",id:"activememberitem",level:3}],c={toc:d};function g(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"position-8"},"position: 8"),(0,s.kt)("h1",{id:"type-list"},"Type List"),(0,s.kt)("h3",{id:"eventtypes"},"EventTypes"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"name"),(0,s.kt)("th",{parentName:"tr",align:null},"type"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"EVENT_MAP"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/JS-SDK/eventCenter/"},"EVENT_MAP"))))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { EVENT_MAP } from './core/events';\n\nexport type EventTypes = 'all' | keyof typeof EVENT_MAP;\n")),(0,s.kt)("h3",{id:"serviceresponse"},"ServiceResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ServiceResponse {\n  data: any;\n  msg: string;\n  code: number;\n}\n")),(0,s.kt)("h3",{id:"pageparams"},"PageParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PageParams {\n  page: number;\n  size: number;\n}\n")),(0,s.kt)("h3",{id:"getroomsparams"},"GetRoomsParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetRoomsParams {\n  user_id?: string;\n  is_opensea_coll?: boolean;\n  opensea_coll_slug?: string;\n  item_contract_address?: string;\n}\n")),(0,s.kt)("h3",{id:"getchatsbyuseridparams"},"GetChatsByUserIdParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetChatsByUserIdParams extends PageParams {\n  page: number;\n  size: number;\n  user_id?: number;\n}\n")),(0,s.kt)("h3",{id:"getchatsbyuseridresponse"},"GetChatsByUserIdResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetChatsByUserIdResponse {\n  created_at: string;\n  creator: UserInfoInterface;\n  creator_id: string;\n  description: string;\n  is_1v1: boolean;\n  is_opensea_coll: boolean;\n  latest_msg: MessageResponse;\n  members: UserInfoInterface[];\n  name: string;\n  opensea_coll_cover: string;\n  opensea_coll_name: string;\n  opensea_coll_slug: string;\n  room_id: string;\n}\n")),(0,s.kt)("h3",{id:"getmessagebyidparams"},"GetMessageByIdParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetMessageByIdParams {\n  msg_id: string;\n}\n")),(0,s.kt)("h3",{id:"createthreadsparams"},"CreateThreadsParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type CreateThreadsParams = {\n  msg_id?: string;\n  is_opensea_item_thread?: boolean;\n  opensea_item_contract_address?: string;\n  opensea_item_token_id?: string;\n};\n")),(0,s.kt)("h3",{id:"getthreadsparams"},"GetThreadsParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetThreadsParams extends PageParams {\n  room_id: string;\n  belong_to_thread_id: string;\n}\n")),(0,s.kt)("h3",{id:"userinfointerface"},"UserInfoInterface"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface UserInfoInterface {\n  created_at: number;\n  eth_wallet_address: string;\n  discord_username: string;\n  facebook_username: string;\n  instagram_username: string;\n  opensea_username: string;\n  twitter_username: string;\n  twitter_avatar?: string;\n  discord_avatar?: string;\n  facebook_avatar?: string;\n  instagram_avatar?: string;\n  opensea_avatar?: string;\n  nick_name: string;\n  status: number;\n  user_id: string;\n}\n")),(0,s.kt)("h3",{id:"roomresponse"},"RoomResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface RoomResponse {\n  created_at: number;\n  creator: UserInfoInterface;\n  description: string;\n  members: UserInfoInterface[];\n  name: string;\n  room_id: string;\n  opensea_coll_cover?: string;\n  is_1v1: boolean;\n}\n")),(0,s.kt)("h3",{id:"getroominfoparams"},"GetRoomInfoParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetRoomInfoParams extends PageParams {\n  room_id: string;\n}\n")),(0,s.kt)("h3",{id:"addmembertoroomparams"},"AddMemberToRoomParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface AddMemberToRoomParams {\n  room_id: string;\n  target_user_id: string;\n}\n")),(0,s.kt)("h3",{id:"delmemberfromroomparams"},"DelMemberFromRoomParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface DelMemberFromRoomParams {\n  room_id: string;\n  member_id: string;\n}\n")),(0,s.kt)("h3",{id:"getmessageparams"},"GetMessageParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetMessageParams extends PageParams {\n  room_id: string;\n}\n")),(0,s.kt)("h3",{id:"loginrandomsecret"},"LoginRandomSecret"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface LoginRandomSecret {\n  wallet_address: string;\n}\n")),(0,s.kt)("h3",{id:"loginparams"},"LoginParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface LoginParams {\n  login_random_secret: string;\n  signature: string;\n  wallet_address: string;\n  appid?: string;\n}\n")),(0,s.kt)("h3",{id:"loginresponse"},"LoginResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface LoginResponse {\n  access_token: string;\n}\n")),(0,s.kt)("h3",{id:"loginrandomsecretparams"},"LoginRandomSecretParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface LoginRandomSecretParams {\n  wallet_address: string;\n}\n")),(0,s.kt)("h3",{id:"platformtype"},"PlatformType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type PlatformType = 'invite_code' | 'twitter';\n")),(0,s.kt)("h3",{id:"platform_enum"},"PLATFORM_ENUM"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export enum PLATFORM_ENUM {\n  TWITTER = 'twitter',\n  DISCORD = 'discord',\n  FACEBOOK = 'facebook',\n  INSTAGRAM = 'instagram',\n  OPENSEA = 'opensea',\n}\n")),(0,s.kt)("h3",{id:"registerparams"},"RegisterParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface RegisterParams {\n  platform: PLATFORM_ENUM;\n  user_name: string;\n}\n")),(0,s.kt)("h3",{id:"userinfo"},"UserInfo"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface UserInfo {\n  access_expired_at: number;\n  created_at: number;\n  discord_avatar: string;\n  discord_username: string;\n  eth_wallet_address: string;\n  facebook_avatar: string;\n  facebook_username: string;\n  instagram_avatar: string;\n  instagram_username: string;\n  nick_name: string;\n  opensea_avatar: string;\n  opensea_username: string;\n  refresh_expired_at: number;\n  status: string;\n  twitter_avatar: string;\n  twitter_username: string;\n  user_id: string;\n}\n")),(0,s.kt)("h3",{id:"searchformatuserinfo"},"SearchFormatUserInfo"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface SearchFormatUserInfo {\n  avatar: string;\n  userId: string;\n  userName: string;\n  createdAt: number;\n}\n")),(0,s.kt)("h3",{id:"createcontractsparams"},"CreateContractsParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface CreateContractsParams {\n  contract_id?: string;\n  erc20s: string[];\n  amounts: number[];\n  NFTs: any[];\n  NFTIDs: any[];\n  recipient_id?: string; // userid\n  expiration: number;\n}\n")),(0,s.kt)("h3",{id:"updatewalletaddressparams"},"UpdateWalletAddressParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface UpdateWalletAddressParams {\n  user_id: string;\n  wallet_address: string;\n}\n")),(0,s.kt)("h3",{id:"getopenseaassetparams"},"GetOpenSeaAssetParams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetOpenSeaAssetParams {\n  owner: string;\n  offset: number;\n  limit: number;\n}\n")),(0,s.kt)("h3",{id:"getopenseaassetresponse"},"GetOpenSeaAssetResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GetOpenSeaAssetResponse {\n  assets: any[];\n}\n")),(0,s.kt)("h3",{id:"messageresponse"},"MessageResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface MessageResponse {\n  at_user_ids: any[];\n  belong_to_thread_id: string;\n  created_at: number;\n  from_uid: string;\n  id: string;\n  is_opensea_item_thread: boolean;\n  is_thread: boolean;\n  msg_contents: string;\n  msg_type: 'text' | 'video';\n  opensea_item_contract_address: string;\n  opensea_item_description: string;\n  opensea_item_image_url: string;\n  opensea_item_name: string;\n  opensea_item_token_id: string;\n  reply_to_msg_id: string;\n  to_room_id: string;\n}\n")),(0,s.kt)("h3",{id:"channelresponse"},"ChannelResponse"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ChannelResponse {\n  created_at: number;\n  creator: UserInfoInterface[];\n  creator_id: number;\n  description: string;\n  is_1v1: boolean;\n  is_opensea_coll: boolean;\n  latest_msg: MessageResponse;\n  members?: UserInfoInterface[];\n  name: string;\n  opensea_coll_cover: string;\n  opensea_coll_name: string;\n  opensea_coll_slug: string;\n  room_id: string;\n}\n")),(0,s.kt)("h3",{id:"msgtype"},"MsgType"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type MsgType = 'text';\n")),(0,s.kt)("h3",{id:"sendmessagedata"},"SendMessageData"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type SendMessageData = {\n  from_uid: string;\n  to: string;\n  msg_contents: string;\n  msg_type: MsgType;\n  is_thread?: boolean;\n  is_opensea_item_thread: boolean;\n  opensea_item_contract_address: string;\n  opensea_item_token_id: string;\n  opensea_item_name: string;\n  opensea_item_description: string;\n  opensea_item_image_url: string;\n  belong_to_thread_id: string;\n  reply_to_msg_id: string;\n  created_at: number;\n  at_user_ids: any[];\n};\n")),(0,s.kt)("h3",{id:"membersitem"},"MembersItem"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type MembersItem = Record<string, UserInfoInterface[] | undefined>;\n")),(0,s.kt)("h3",{id:"activememberitem"},"ActiveMemberItem"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"export type ActiveMemberItem = Record<string, UserInfoInterface>;\n")))}g.isMDXComponent=!0}}]);