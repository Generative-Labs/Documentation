"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[4128],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=o,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2124:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={sidebar_position:0},l="Intro",c={unversionedId:"Web3MQ-UI-Components/Web3MQ-React/Intro",id:"Web3MQ-UI-Components/Web3MQ-React/Intro",title:"Intro",description:"This tutorial walks you through how to use @web3mq/react-components using a sample React projects, and successfully build a chat app interface",source:"@site/docs/Web3MQ-UI-Components/Web3MQ-React/Intro.md",sourceDirName:"Web3MQ-UI-Components/Web3MQ-React",slug:"/Web3MQ-UI-Components/Web3MQ-React/Intro",permalink:"/docs/Web3MQ-UI-Components/Web3MQ-React/Intro",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"ed25519key",permalink:"/docs/Web3MQ-API/ed25519key"},next:{title:"LoginModal",permalink:"/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/LoginModal"}},p={},m=[{value:"Installation",id:"installation",level:2},{value:"Initialize Client",id:"initialize-client",level:2},{value:"Get the Key pair for generating the web3mq client",id:"get-the-key-pair-for-generating-the-web3mq-client",level:2},{value:"An example of initializing login hooks",id:"an-example-of-initializing-login-hooks",level:2},{value:"Creating a Web3MQ Client",id:"creating-a-web3mq-client",level:2},{value:"Your First App with Web3MQ React",id:"your-first-app-with-web3mq-react",level:2}],d={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"intro"},"Intro"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This tutorial walks you through how to use @web3mq/react-components using a sample React projects, and successfully build a chat app interface")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Install @web3mq/react-components Library using a package manager of your choice")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @web3mq/react-components\nor\nyarn add @web3mq/react-components\n")),(0,i.kt)("h1",{id:"usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Before using the @web3mq/react-components component library, we need to understand a series of processes for initializing Web3MQ.And Web3MQ network nodes, key pairs and other dependencies need to be provided by the user to the component library")),(0,i.kt)("p",null,"In all example, the dependencies used to generate Web3mq are stored in the browser cache, or the user can choose how they want to store them."),(0,i.kt)("h2",{id:"initialize-client"},"Initialize Client"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Initialize Client and Connect to Web3MQ Network.",(0,i.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/quickStart/#initialize-client"},"Details"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { useState } from 'react';\nimport {Client} from '@web3mq/client';\n\nconst [fastestUrl, setFastUrl] = useState<string | null>(null);\n\n// You can save the bestEndpointUrl locally to skip endpoint search next time, which will save time, and\nconst init = async () => {\n  const tempPubkey = localStorage.getItem('PUBLIC_KEY') || '';\n  const didKey = localStorage.getItem('DID_KEY') || '';\n  const fastUrl = await Client.init({\n    connectUrl: localStorage.getItem('FAST_URL'),\n    app_key: 'app_key', // temporary authorization key obtained by applying, will be removed in future testnets and mainnet\n    env: 'dev',\n    didKey,\n    tempPubkey,\n  });\n  localStorage.setItem('FAST_URL', fastUrl);\n  setFastUrl(fastUrl);\n};\n")),(0,i.kt)("h2",{id:"get-the-key-pair-for-generating-the-web3mq-client"},"Get the Key pair for generating the web3mq client"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"First you need to register and login to get. ",(0,i.kt)("a",{parentName:"p",href:"/docs/Web3MQ-SDK/JS-SDK/quickStart/#register-user"},"Details"),". But the @web3mq/react-components component library provides a ",(0,i.kt)("inlineCode",{parentName:"p"},"LoginModal")," component to make it easier for you to get the dependencies for creating a Web3MQ Client.")),(0,i.kt)("p",null,"The required props of ",(0,i.kt)("inlineCode",{parentName:"p"},"LoginModal"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"handleLoginEvent"),", is the callback used for login or registration, in which you can get the data after login and registration. And you can also refer to the following examples. ",(0,i.kt)("a",{parentName:"p",href:"/docs/Web3MQ-UI-Components/Web3MQ-React/chatComponent/LoginModal#use-handleloginevent-prop"},"Details")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { useState } from 'react';\nimport { Client, KeyPairsType } from '@web3mq/client';\nimport { LoginModal } from '@web3mq/react-components';\nimport '@web3mq/react-components/dist/css/index.css';\n\nexport const App = () => {\n  const appType = 'pc'; // 'pc' | 'h5' | 'mobile'\n  const [fastestUrl, setFastUrl] = useState<string | null>(null);\n  const [keys, setKeys] = useState<KeyPairsType | null>(hasKeys);\n  // You can save the bestEndpointUrl locally to skip endpoint search next time, which will save time, and\n  const init = async () => {\n    const tempPubkey = localStorage.getItem('PUBLIC_KEY') || '';\n    const didKey = localStorage.getItem('DID_KEY') || '';\n    const fastUrl = await Client.init({\n      connectUrl: localStorage.getItem('FAST_URL'),\n      app_key: 'app_key', // temporary authorization key obtained by applying, will be removed in future testnets and mainnet\n      env: 'dev',\n      didKey,\n      tempPubkey,\n    });\n    localStorage.setItem('FAST_URL', fastUrl);\n    setFastUrl(fastUrl);\n  };\n  // Callback on login or registration\n  const handleLoginEvent = (eventData: any) => {\n    if (eventData.data) {\n      // when login\n      if (eventData.type === 'login') {\n        const {\n          privateKey,\n          publicKey,\n          tempPrivateKey,\n          tempPublicKey,\n          didKey,\n          userid,\n          address,\n          pubkeyExpiredTimestamp,\n        } = eventData.data;\n        // Store to browser cache\n        localStorage.setItem('userid', userid);\n        localStorage.setItem('PRIVATE_KEY', tempPrivateKey);\n        localStorage.setItem('PUBLIC_KEY', tempPublicKey);\n        localStorage.setItem('WALLET_ADDRESS', address);\n        localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n        localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n        localStorage.setItem(`DID_KEY`, didKey);\n        localStorage.setItem('PUBKEY_EXPIRED_TIMESTAMP', String(pubkeyExpiredTimestamp));\n        // update state\n        setKeys({\n          PrivateKey: tempPrivateKey,\n          PublicKey: tempPublicKey,\n          userid,\n        });\n      }\n      // when register\n      if (eventData.type === 'register') {\n        const { privateKey, publicKey, address } = eventData.data;\n        // Store to browser cache\n        localStorage.setItem('WALLET_ADDRESS', address);\n        localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n        localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n      }\n    }\n  };\n  useEffect(() => {\n    init();\n    // set your component theme\n    document.getElementsByTagName('body')[0].setAttribute('data-theme', 'light');\n  }, []);\n\n  if (!fastUrl) return null;\n  if (!keys) {\n    return (\n      <LoginModal\n        appType={appType}\n        isShow={true}\n        handleLoginEvent={handleLoginEvent}\n      />\n    )\n  }\n  return (\n    <div>\n      <p>The Public key: {keys.PublicKey}</p>\n      <p>The Private Key: {keys.privateKey}</p>\n      <p>The userid: {keys.userid}</p>\n    <div>\n  )\n};\n")),(0,i.kt)("h2",{id:"an-example-of-initializing-login-hooks"},"An example of initializing login hooks"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The above two steps can be combined into a very simple hooks for login,Here is a simple hook function that provides dependencies for you to create web3MQ Client.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useMemo, useState } from 'react';\nimport { Client, KeyPairsType } from '@web3mq/client';\n\nconst useLogin = () => {\n  const hasKeys = useMemo(() => {\n    const PrivateKey = localStorage.getItem('PRIVATE_KEY') || '';\n    const PublicKey = localStorage.getItem('PUBLIC_KEY') || '';\n    const userid = localStorage.getItem('userid') || '';\n    if (PrivateKey && PublicKey && userid) {\n      return { PrivateKey, PublicKey, userid };\n    }\n    return null;\n  }, []);\n  const [keys, setKeys] = useState<KeyPairsType | null>(hasKeys);\n  const [fastestUrl, setFastUrl] = useState<string | null>(null);\n\n  const init = async () => {\n    const tempPubkey = localStorage.getItem('PUBLIC_KEY') || '';\n    const didKey = localStorage.getItem('DID_KEY') || '';\n    const fastUrl = await Client.init({\n      connectUrl: localStorage.getItem('FAST_URL'),\n      app_key: 'app_key',\n      env: 'dev',\n      didKey,\n      tempPubkey,\n    });\n    localStorage.setItem('FAST_URL', fastUrl);\n    setFastUrl(fastUrl);\n  };\n  const logout = () => {\n    localStorage.setItem('PRIVATE_KEY', '');\n    localStorage.setItem('PUBLIC_KEY', '');\n    localStorage.setItem('DID_KEY', '');\n    localStorage.setItem('userid', '');\n    setKeys(null);\n  };\n  // Callback on login or registration\n  const handleLoginEvent = (eventData: any) => {\n    if (eventData.data) {\n      // when login\n      if (eventData.type === 'login') {\n        const {\n          privateKey,\n          publicKey,\n          tempPrivateKey,\n          tempPublicKey,\n          didKey,\n          userid,\n          address,\n          pubkeyExpiredTimestamp,\n        } = eventData.data;\n        localStorage.setItem('userid', userid);\n        localStorage.setItem('PRIVATE_KEY', tempPrivateKey);\n        localStorage.setItem('PUBLIC_KEY', tempPublicKey);\n        localStorage.setItem('WALLET_ADDRESS', address);\n        localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n        localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n        localStorage.setItem(`DID_KEY`, didKey);\n        localStorage.setItem('PUBKEY_EXPIRED_TIMESTAMP', String(pubkeyExpiredTimestamp));\n        setKeys({\n          PrivateKey: tempPrivateKey,\n          PublicKey: tempPublicKey,\n          userid,\n        });\n      }\n      // when register\n      if (eventData.type === 'register') {\n        const { privateKey, publicKey, address } = eventData.data;\n        localStorage.setItem('WALLET_ADDRESS', address);\n        localStorage.setItem(`MAIN_PRIVATE_KEY`, privateKey);\n        localStorage.setItem(`MAIN_PUBLIC_KEY`, publicKey);\n      }\n    }\n  };\n\n  return { keys, fastestUrl, init, logout, handleLoginEvent };\n};\n\nexport default useLogin;\n\n")),(0,i.kt)("h2",{id:"creating-a-web3mq-client"},"Creating a Web3MQ Client"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Client } from '@web3mq/client';\n\nconst client = Client.getInstance('YOUR_ACCESS_TOKEN');\n")),(0,i.kt)("h2",{id:"your-first-app-with-web3mq-react"},"Your First App with Web3MQ React"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Congratulations, we have reached the last step and combined with the login hooks, we can build a complete chat application interface!")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When using the ",(0,i.kt)("inlineCode",{parentName:"p"},"@web3mq/react-components")," "),(0,i.kt)("blockquote",{parentName:"div"},(0,i.kt)("ol",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ol"},"need to introduce css file of ",(0,i.kt)("inlineCode",{parentName:"li"},"@web3mq/react-components")," firstly."),(0,i.kt)("li",{parentName:"ol"},"set the theme used, you need to set the ",(0,i.kt)("inlineCode",{parentName:"li"},"data-theme")," attribute in the body, currently only ",(0,i.kt)("inlineCode",{parentName:"li"},"light")," is a theme."))))),(0,i.kt)("p",null,"In most components of the @web3mq/react-components library, it is possible to both render without injecting props, and also render custom component by passing in props. In custom components, the corresponding state can be obtained by props or the corresponding context."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { useState } from 'react';\nimport {\n  AppTypeEnum,\n  Chat,\n  Channel,\n  DashBoard,\n  LoginModal,\n  MessageHeader,\n  MessageList,\n  MessageInput,\n  Window,\n} from '@web3mq/react-components';\nimport useLogin from './hooks/useLogin';\nimport '@web3mq/react-components/dist/css/index.css';\n\nconst App = () => {\n  const { keys, fastestUrl, init, logout, handleLoginEvent } = useLogin();\n  // Use your own logic to decide which pattern to use\n  const appType = 'pc'; // 'pc' | 'h5' | 'mobile'\n\n  useEffect(() => {\n    init();\n    // set your component theme\n    document.getElementsByTagName('body')[0].setAttribute('data-theme', 'light');\n  }, []);\n\n  if (!fastestUrl) {\n    return null;\n  }\n\n  if (!keys) {\n    // Redirect to the login page\n    let mainKeys = null;\n    const mainPrivateKey = localStorage.getItem(`MAIN_PRIVATE_KEY`);\n    const mainPublicKey = localStorage.getItem(`MAIN_PUBLIC_KEY`);\n    const address = localStorage.getItem('WALLET_ADDRESS');\n    if (mainPublicKey && mainPrivateKey && address) {\n      mainKeys = {\n        publicKey: mainPublicKey,\n        privateKey: mainPrivateKey,\n        walletAddress: address,\n      };\n    }\n    return (\n      <LoginModal \n        appType={appType}\n        containerId=''\n        keys={mainKeys}\n        isShow={true}\n        handleLoginEvent={handleLoginEvent}\n      />\n    )\n  }\n  const client = Client.getInstance(key);\n\n  return (\n    <Chat client={client} appType={appType} logout={logout}>\n      <DashBoard />\n      <Channel>\n        <Window>\n          <MessageHeader avatarSize={40} />\n          <MessageList />\n          <MessageInput />\n        </Window>\n      </Channel>\n      <Main />\n    </Chat>\n  );\n};\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you want to display the component library content in a small window, it is recommended to pass the id selector of the current window container to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Chat")," component, for example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"const App = () => {\n  return (\n    <div id='web3MQ_Box' style={{position: 'fixed', width: '400px', height: '600px', right: '0', bottom: '0'}}>\n      <Chat containerId='web3MQ_Box' client={client} appType={appType} logout={logout}>\n        <DashBoard />\n        <Channel>\n          <Window>\n            <MessageHeader avatarSize={40} />\n            <MessageList />\n            <MessageInput />\n          </Window>\n        </Channel>\n        <Main />\n      </Chat>\n    </div>\n  )\n}\n")))}u.isMDXComponent=!0}}]);