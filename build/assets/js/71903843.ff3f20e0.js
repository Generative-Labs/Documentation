"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[5718],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,k=m["".concat(i,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4321:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],c={position:1},i="QuickStart",s={unversionedId:"Web3MQ-SDK/JS-SDK-V2/quickStart/quickStart",id:"Web3MQ-SDK/JS-SDK-V2/quickStart/quickStart",title:"QuickStart",description:"Let's learn how to use and successfully send the first message in the chat room we created",source:"@site/docs/Web3MQ-SDK/JS-SDK-V2/quickStart/quickStart.md",sourceDirName:"Web3MQ-SDK/JS-SDK-V2/quickStart",slug:"/Web3MQ-SDK/JS-SDK-V2/quickStart/",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/quickStart/",tags:[],version:"current",frontMatter:{position:1},sidebar:"tutorialSidebar",previous:{title:"Utils",permalink:"/docs/Web3MQ-SDK/JS-SDK/utils/"},next:{title:"Client",permalink:"/docs/Web3MQ-SDK/JS-SDK-V2/client/"}},u={},p=[{value:"Usage",id:"usage",level:2},{value:"Install",id:"install",level:2},{value:"Connect MetaMask",id:"connect-metamask",level:2},{value:"Code",id:"code",level:4},{value:"Create Web3MQ client connection",id:"create-web3mq-client-connection",level:2},{value:"Code",id:"code-1",level:4},{value:"Create room",id:"create-room",level:2},{value:"Code",id:"code-2",level:4},{value:"send message",id:"send-message",level:2},{value:"Code",id:"code-3",level:4},{value:"Example",id:"example",level:2},{value:"Code",id:"code-4",level:4}],m={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart"},"QuickStart"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Let's learn how to use and successfully send the first message in the chat room we created")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install MetaMask extension"),(0,o.kt)("li",{parentName:"ol"},"Install package"),(0,o.kt)("li",{parentName:"ol"},"Register Web3MQ user if you are not"),(0,o.kt)("li",{parentName:"ol"},"Create Web3MQ client connection"),(0,o.kt)("li",{parentName:"ol"},"Create Web3MQ chat room"),(0,o.kt)("li",{parentName:"ol"},"Send message"),(0,o.kt)("li",{parentName:"ol"},"Example")),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install web3-mq\nor\nyarn add web3-mq\n")),(0,o.kt)("h2",{id:"connect-metamask"},"Connect MetaMask"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Connect MetaMask get your eth wallet")),(0,o.kt)("h4",{id:"code"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Web3MQ } from 'web3-mq';\n\nconst { MetaMask } = Web3MQ;\n\nconst { PrivateKey, PublicKey } = await MetaMask.signMetaMask(\n  'https://www.web3mq.com' // your_domain_url\n);\n\n// Keep your private key in safe place\nlocalStorage.setItem('PRIVATE_KEY', PrivateKey);\nlocalStorage.setItem('PUBLICKEY', PublicKey);\n")),(0,o.kt)("h2",{id:"create-web3mq-client-connection"},"Create Web3MQ client connection"),(0,o.kt)("h4",{id:"code-1"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// sign MetaMask get keys\nconst keys = { PrivateKey, PublicKey };\n\n// ws host url\nconst HostURL = '94.16.119.221:23333/messages';\n\nconst client = Web3MQ.Client.getInstance(keys, HostURL);\n")),(0,o.kt)("h2",{id:"create-room"},"Create room"),(0,o.kt)("h4",{id:"code-2"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<button\n  onClick={() => {\n    client.channel.createRoom();\n  }}>\n  createGroup\n</button>\n")),(0,o.kt)("h2",{id:"send-message"},"send message"),(0,o.kt)("h4",{id:"code-3"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<button\n  onClick={() => {\n    client.message.sendMessage('your send message');\n  }}>\n  sendMessage\n</button>\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("h4",{id:"code-4"},"Code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useMemo, useState } from 'react';\nimport { Web3MQ } from 'web3-mq';\nimport { KeyPairsType } from 'web3-mq/dist/web3MQ';\n\nconst { MetaMask } = Web3MQ;\n\nconst App = () => {\n  const hasKeys = useMemo(() => {\n    const PrivateKey = localStorage.getItem('PRIVATE_KEY') || '';\n    const PublicKey = localStorage.getItem('PUBLICKEY') || '';\n    if (PrivateKey && PublicKey) {\n      return { PrivateKey, PublicKey };\n    }\n    return null;\n  }, []);\n\n  const [keys, setKeys] = useState<KeyPairsType | null>(hasKeys);\n  const [list, setList] = useState<any>(null);\n\n  const signMetaMask = async () => {\n    const { PrivateKey, PublicKey } = await MetaMask.signMetaMask(\n      'https://www.web3mq.com'\n    );\n    localStorage.setItem('PRIVATE_KEY', PrivateKey);\n    localStorage.setItem('PUBLICKEY', PublicKey);\n    setKeys({ PrivateKey, PublicKey });\n  };\n\n  if (!keys) {\n    return (\n      <div>\n        <button onClick={signMetaMask}>signMetaMask</button>\n      </div>\n    );\n  }\n  const client = Web3MQ.Client.getInstance(\n    keys,\n    '94.16.119.221:23333/messages'\n  );\n\n  const handleEvent = (event: { type: any }) => {\n    if (event.type === 'channel.getList') {\n      setList(client.channel.channelList);\n    }\n  };\n\n  useEffect(() => {\n    client.on('channel.getList', handleEvent);\n    return () => {\n      client.off('channel.getList');\n    };\n  }, []);\n\n  useEffect(() => {\n    client.channel.queryChannels({ page: 1, size: 100 });\n  }, []);\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          client.channel.createRoom();\n        }}>\n        create group\n      </button>\n      <ul>\n        {list.map((item: any, idx: number) => {\n          return (\n            <li key={item.topic}>\n              {idx}-{item.topic}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n")))}d.isMDXComponent=!0}}]);