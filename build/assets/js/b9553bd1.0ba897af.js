"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[7066],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(n),m=a,b=f["".concat(l,".").concat(m)]||f[m]||p[m]||o;return n?r.createElement(b,i(i({ref:t},s),{},{components:n})):r.createElement(b,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2238:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={},l="Intro",u={unversionedId:"Web3MQ-SDK/JS-SDK/authorization/Intro",id:"Web3MQ-SDK/JS-SDK/authorization/Intro",title:"Intro",description:"Includes integration of multiple wallet classes",source:"@site/docs/Web3MQ-SDK/JS-SDK/authorization/Intro.md",sourceDirName:"Web3MQ-SDK/JS-SDK/authorization",slug:"/Web3MQ-SDK/JS-SDK/authorization/Intro",permalink:"/docs/Web3MQ-SDK/JS-SDK/authorization/Intro",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"QuickStart",permalink:"/docs/Web3MQ-SDK/JS-SDK/quickStart/"},next:{title:"MetaMask",permalink:"/docs/Web3MQ-SDK/JS-SDK/authorization/MetaMask"}},s={},p=[{value:"Feature",id:"feature",level:2},{value:"Usage",id:"usage",level:2}],f={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intro"},"Intro"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Includes integration of multiple wallet classes")),(0,o.kt)("h2",{id:"feature"},"Feature"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Web3MQ-SDK/JS-SDK/authorization/MetaMask"},"MetaMask Class")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Web3MQ-SDK/JS-SDK/authorization/Slope"},"Slope Class")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Web3MQ-SDK/JS-SDK/authorization/Walletconnect"},"Walletconnect Class"))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Web3MQ, MetaMask, Slope, Walletconnect } from "web3-mq";\n\nconst token = await MetaMask.signMetaMask();\n// or\nconst token = await Slope.signSlope();\n// or\nconst token = await Walletconnect.signWalletconnect();\n\nconst client = Web3MQ.getInstance(token);\n')))}m.isMDXComponent=!0}}]);