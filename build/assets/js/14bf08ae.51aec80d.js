"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[4655],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=a,m=p["".concat(o,".").concat(g)]||p[g]||d[g]||i;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9630:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=["components"],l={position:5},o="Contact",c={unversionedId:"Web3MQ-SDK/Swift-SDK/Contacts/Contacts",id:"Web3MQ-SDK/Swift-SDK/Contacts/Contacts",title:"Contact",description:"Methods",source:"@site/docs/Web3MQ-SDK/Swift-SDK/Contacts/Contacts.md",sourceDirName:"Web3MQ-SDK/Swift-SDK/Contacts",slug:"/Web3MQ-SDK/Swift-SDK/Contacts/",permalink:"/docs/Web3MQ-SDK/Swift-SDK/Contacts/",tags:[],version:"current",frontMatter:{position:5},sidebar:"tutorialSidebar",previous:{title:"Messages",permalink:"/docs/Web3MQ-SDK/Swift-SDK/Messages/"},next:{title:"User",permalink:"/docs/Web3MQ-SDK/Swift-SDK/Users/"}},u={},d=[{value:"Methods",id:"methods",level:2},{value:"Getting Contacts",id:"getting-contacts",level:2},{value:"Searching Contacts",id:"searching-contacts",level:2},{value:"Sending Friend Request",id:"sending-friend-request",level:2},{value:"Getting Friend Requests From Current User",id:"getting-friend-requests-from-current-user",level:2},{value:"Getting Received Friend Requests",id:"getting-received-friend-requests",level:2},{value:"Answering Request",id:"answering-request",level:2}],p={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"contact"},"Contact"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,i.kt)("th",{parentName:"tr",align:null},"Response"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"getContacts"),(0,i.kt)("td",{parentName:"tr",align:null},"page: Int, size: Int"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/Swift-SDK/Structs/###UserInfo"},"User"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"search"),(0,i.kt)("td",{parentName:"tr",align:null},"keyword: String"),(0,i.kt)("td",{parentName:"tr",align:null},"[String]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"makeFriendRequest"),(0,i.kt)("td",{parentName:"tr",align:null},"(toUserId: string)"),(0,i.kt)("td",{parentName:"tr",align:null},"Bool")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"answerRequest"),(0,i.kt)("td",{parentName:"tr",align:null},"userId: String, action: FriendRequestAction"),(0,i.kt)("td",{parentName:"tr",align:null},"Bool")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"getFriendRequestsFromCurrentUser"),(0,i.kt)("td",{parentName:"tr",align:null},"page: Int, size: Int"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/Swift-SDK/Structs/###UserInfo"},"User"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"getFriendRequestsFromCurrentUser"),(0,i.kt)("td",{parentName:"tr",align:null},"page: Int, size: Int"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/Web3MQ-SDK/Swift-SDK/Structs/###UserInfo"},"User"))))),(0,i.kt)("h2",{id:"getting-contacts"},"Getting Contacts"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"let contacts: [User] = await Client.shared.contactManager.contacts(page: 1, size: 20)\n")),(0,i.kt)("h2",{id:"searching-contacts"},"Searching Contacts"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let contacts: [User] = await Client.shared.contactManager.search(keyword: "{keyword}")\n')),(0,i.kt)("h2",{id:"sending-friend-request"},"Sending Friend Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let result: Result = await Client.shared.contactManager.makeFriendRequest(to: "{userId}")\n')),(0,i.kt)("h2",{id:"getting-friend-requests-from-current-user"},"Getting Friend Requests From Current User"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"let users: [String]= await Client.shared.contactManager.getFriendRequestsFromCurrentUser(page: 0, size: 20)\n")),(0,i.kt)("h2",{id:"getting-received-friend-requests"},"Getting Received Friend Requests"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"let users: [String]= await Client.shared.contactManager.getReceivedFriendRequests(page: 0, size: 20)\n")),(0,i.kt)("h2",{id:"answering-request"},"Answering Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let result: Bool = await Client.shared.contactManager.answerRequest(topicId: "{topicId}", action: .agree)\n')))}g.isMDXComponent=!0}}]);