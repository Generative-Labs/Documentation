"use strict";(self.webpackChunkchat_service_api_doc=self.webpackChunkchat_service_api_doc||[]).push([[1745],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var l=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=l.createContext({}),s=function(e){var t=l.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return l.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=s(n),d=i,g=k["".concat(c,".").concat(d)]||k[d]||p[d]||a;return n?l.createElement(g,r(r({ref:t},u),{},{components:n})):l.createElement(g,r({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=k;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var s=2;s<a;s++)r[s]=n[s];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},230:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var l=n(7462),i=n(3366),a=(n(7294),n(3905)),r=["components"],o={position:9},c=void 0,s={unversionedId:"Web3MQ-SDK/JS-SDK/eventCenter/eventCenter",id:"Web3MQ-SDK/JS-SDK/eventCenter/eventCenter",title:"eventCenter",description:"event list",source:"@site/docs/Web3MQ-SDK/JS-SDK/eventCenter/eventCenter.md",sourceDirName:"Web3MQ-SDK/JS-SDK/eventCenter",slug:"/Web3MQ-SDK/JS-SDK/eventCenter/",permalink:"/docs/Web3MQ-SDK/JS-SDK/eventCenter/",tags:[],version:"current",frontMatter:{position:9},sidebar:"tutorialSidebar",previous:{title:"Standard List",permalink:"/docs/Web3MQ-SDK/JS-SDK/standards/"},next:{title:"Quick Start",permalink:"/docs/Web3MQ-SDK/Swift-SDK/QuickStart/"}},u={},p=[{value:"event list",id:"event-list",level:2},{value:"Connect",id:"connect",level:3},{value:"Channel",id:"channel",level:3},{value:"Contact",id:"contact",level:3},{value:"Message",id:"message",level:3},{value:"Notification",id:"notification",level:3},{value:"Event usage",id:"event-usage",level:3},{value:"Used in SDK  publish an event",id:"used-in-sdk--publish-an-event",level:4},{value:"Create an event listener",id:"create-an-event-listener",level:4},{value:"Delete an event listener",id:"delete-an-event-listener",level:4}],k={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,l.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"event-list"},"event list"),(0,a.kt)("h3",{id:"connect"},"Connect"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"connect.changeReadyStatus")),(0,a.kt)("h3",{id:"channel"},"Channel"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"channel.created")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when a new channel is created")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"channel.getList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when call client.channel.queryChannels")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"channel.activeChange")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when the currently active channel has changed")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"channel.updated")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when a channel is updated")),(0,a.kt)("h3",{id:"contact"},"Contact"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.activeChange")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when the currently active contact has changed")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.getList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when all contact lists were updated")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.getContactList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when get the list of people who follow each other")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.getFollowerList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when get the list of followers list")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.getFollowingList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when get the list of people you follow")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.friendList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when get the list of friend requests I have sent")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.reviceList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when get the list of friend requests I have received")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.updateContactList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when the contact list is updated")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.updateFollowerList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when the list of followers is updated")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contact.updateFollowingList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when the list of following is updated")),(0,a.kt)("h3",{id:"message"},"Message"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"message.send")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when you send a message")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"message.delivered")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when you receive a new message")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"message.read")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when a message has been read")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"message.updated")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when the message is updated")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"message.getList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when getting a list of messages")),(0,a.kt)("h3",{id:"notification"},"Notification"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"notification.messageNew")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when you receive a new message")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"notification.getList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when getting the notification list")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"notification.getMyTopicList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when getting the topic list I created")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"notification.getMySubscribeList")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This event is triggered when getting the topic list I subscribed")),(0,a.kt)("h3",{id:"event-usage"},"Event usage"),(0,a.kt)("h4",{id:"used-in-sdk--publish-an-event"},"Used in SDK  publish an event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"client.emit('channel.getList', data);\n")),(0,a.kt)("h4",{id:"create-an-event-listener"},"Create an event listener"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"client.on('channel.getList', (data) => {\n    console.log(data);\n});\n")),(0,a.kt)("h4",{id:"delete-an-event-listener"},"Delete an event listener"),(0,a.kt)("p",null,"client.off('channel.getList');"))}d.isMDXComponent=!0}}]);